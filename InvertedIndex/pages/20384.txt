https://en.wikipedia.org/wiki/Internet_protocol_suite




Internet protocol suite - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
History




Toggle History subsection





1.1
Early research








1.2
Early implementation








1.3
Adoption








1.4
Formal specification and standards










2
Key architectural principles








3
Link layer








4
Internet layer








5
Transport layer








6
Application layer








7
Layering evolution and representations in the literature








8
Comparison of TCP/IP and OSI layering








9
Implementations








10
See also








11
Notes








12
References








13
Bibliography








14
External links


















Toggle the table of contents







Internet protocol suite



79 languages




AfrikaansالعربيةAsturianuAvañe'ẽAzərbaycancaবাংলাБеларускаяБеларуская (тарашкевіца)भोजपुरीБългарскиBosanskiBrezhonegCatalàČeštinaDanskDeutschEestiΕλληνικάEspañolEsperantoEuskaraفارسیFrançaisGaeilgeGalegoગુજરાતી한국어Հայերենहिन्दीHrvatskiIdoBahasa IndonesiaInterlinguaIsiZuluÍslenskaItalianoעבריתქართულიҚазақшаKurdîКыргызчаLatviešuLëtzebuergeschLietuviųMagyarМакедонскиമലയാളംBahasa MelayuМонголNederlands日本語Norsk bokmålNorsk nynorskОлык марийOʻzbekcha / ўзбекчаPiemontèisPolskiPortuguêsRomânăРусскийShqipSimple EnglishSlovenčinaSlovenščinaکوردیСрпски / srpskiSrpskohrvatski / српскохрватскиSuomiSvenskaไทยTürkçeУкраїнськаاردوTiếng Việt吴语ייִדישYorùbá粵語中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikimedia CommonsWikiversityWikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia


Framework for communication protocols used in IP networking
This article is about the protocols that make up the Internet architecture. For the IP network protocol only, see Internet Protocol.


Internet protocol suite
Application layer
BGP
DHCP (v6)
DNS
FTP
HTTP (HTTP/3)
HTTPS
IMAP
IPP
IRC
LDAP
MGCP
MQTT
NNTP
NTP
OSPF
POP
PTP
ONC/RPC
RTP
RTSP
RIP
SIP
SMTP
SNMP
SSH
Telnet
TLS/SSL
XMPP
more...

Transport layer
TCP
UDP
DCCP
SCTP
RSVP
QUIC
more...

Internet layer
IP
v4
v6
ICMP (v6)
NDP
ECN
IGMP
IPsec
more...

Link layer
ARP
Tunnels
PPP
MAC
more...
vte
The Internet protocol suite, commonly known as TCP/IP, is a framework for organizing the set of communication protocols used in the Internet and similar computer networks according to functional criteria. The foundational protocols in the suite are the Transmission Control Protocol (TCP), the User Datagram Protocol (UDP), and the Internet Protocol (IP). Early versions of this networking model were known as the Department of Defense (DoD) model because the research and development were funded by the United States Department of Defense through DARPA.
The Internet protocol suite provides end-to-end data communication specifying how data should be packetized, addressed, transmitted, routed, and received. This functionality is organized into four abstraction layers, which classify all related protocols according to each protocol's scope of networking.[1][2] An implementation of the layers for a particular application forms a protocol stack. From lowest to highest, the layers are the link layer, containing communication methods for data that remains within a single network segment (link); the internet layer, providing internetworking between independent networks; the transport layer, handling host-to-host communication; and the application layer, providing process-to-process data exchange for applications.
The technical standards underlying the Internet protocol suite and its constituent protocols are maintained by the Internet Engineering Task Force (IETF). The Internet protocol suite predates the OSI model, a more comprehensive reference framework for general networking systems.


History[edit]
Further information: History of the Internet


Internet history timeline



Early research and development:

1960–1964: RAND networking concepts developed
1962–1964: ARPA networking ideas
1965 (1965): NPL network concepts conceived
1966 (1966): Merit Network founded
1967 (1967): ARPANET planning begins
1967 (1967): Symposium on Operating Systems Principles
1969 (1969): NPL followed by the ARPANET carry their first packets
1970 (1970): Network Information Center (NIC)
1971 (1971): Tymnet switched-circuit network
1972 (1972): Merit Network's packet-switched network operational
1972 (1972): Internet Assigned Numbers Authority (IANA) established
1973 (1973): CYCLADES network demonstrated
1973 (1973): PARC Universal Packet development begins
1974 (1974): Transmission Control Program specification published
1975 (1975): Telenet commercial packet-switched network
1976 (1976): X.25 protocol approved and deployed on public data networks
1978 (1978): Minitel introduced
1979 (1979): Internet Activities Board (IAB)
1980 (1980): USENET news using UUCP
1980 (1980): Ethernet standard introduced
1981 (1981): BITNET established
Merging the networks and creating the Internet:

1981 (1981): Computer Science Network (CSNET)
1982 (1982): TCP/IP protocol suite formalized
1982 (1982): Simple Mail Transfer Protocol (SMTP)
1983 (1983): Domain Name System (DNS)
1983 (1983): MILNET split off from ARPANET
1984 (1984): OSI Reference Model released
1985 (1985): First .COM domain name registered
1986 (1986): NSFNET with 56 kbit/s links
1986 (1986): Internet Engineering Task Force (IETF)
1987 (1987): UUNET founded
1988 (1988): NSFNET upgraded to 1.5 Mbit/s (T1)
1988 (1988): Morris worm
1988 (1988): Complete Internet protocol suite
1989 (1989): Border Gateway Protocol (BGP)
1989 (1989): PSINet founded, allows commercial traffic
1989 (1989): Federal Internet Exchanges (FIX East|FIXes)
1990 (1990): GOSIP (without TCP/IP)
1990 (1990): ARPANET decommissioned
1990 (1990): Advanced Network and Services (ANS)
1990 (1990): UUNET/Alternet allows commercial traffic
1990 (1990): Archie search engine
1991 (1991): Wide area information server (WAIS)
1991 (1991): Gopher
1991 (1991): Commercial Internet eXchange (CIX)
1991 (1991): ANS CO+RE allows commercial traffic
1991 (1991): World Wide Web (WWW)
1992 (1992): NSFNET upgraded to 45 Mbit/s (T3)
1992 (1992): Internet Society (ISOC) established
1993 (1993): Classless Inter-Domain Routing (CIDR)
1993 (1993): InterNIC established
1993 (1993): AOL added USENET access
1993 (1993): Mosaic web browser released
1994 (1994): Full text web search engines
1994 (1994): North American Network Operators' Group (NANOG) established
Commercialization, privatization, broader access leads to the modern Internet:

1995 (1995): New Internet architecture with commercial ISPs connected at NAPs
1995 (1995): NSFNET decommissioned
1995 (1995): GOSIP updated to allow TCP/IP
1995 (1995): very high-speed Backbone Network Service (vBNS)
1995 (1995): IPv6 proposed
1996 (1996): AOL changes pricing model from hourly to monthly
1998 (1998): Internet Corporation for Assigned Names and Numbers (ICANN)
1999 (1999): IEEE 802.11b wireless networking
1999 (1999): Internet2/Abilene Network
1999 (1999): vBNS+ allows broader access
2000 (2000): Dot-com bubble bursts
2001 (2001): New top-level domain names activated
2001 (2001): Code Red I, Code Red II, and Nimda worms
2003 (2003): UN World Summit on the Information Society (WSIS) phase I
2003 (2003): National LambdaRail founded
2004 (2004): UN Working Group on Internet Governance (WGIG)
2005 (2005): UN WSIS phase II
2006 (2006): First meeting of the Internet Governance Forum
2010 (2010): First internationalized country code top-level domains registered
2012 (2012): ICANN begins accepting applications for new generic top-level domain names
2013 (2013): Montevideo Statement on the Future of Internet Cooperation
2014 (2014): NetMundial international Internet governance proposal
2016 (2016): ICANN contract with U.S. Dept. of Commerce ends, IANA oversight passes to the global Internet community on October 1st
Examples of Internet services:

1989 (1989): AOL dial-up service provider, email, instant messaging, and web browser
1990 (1990): IMDb Internet movie database
1994 (1994): Yahoo! web directory
1995 (1995): Amazon online retailer
1995 (1995): eBay online auction and shopping
1995 (1995): Craigslist classified advertisements
1995 (1995): AltaVista search engine
1996 (1996): Outlook (formerly Hotmail) free web-based e-mail
1996 (1996): RankDex search engine
1997 (1997): Google Search
1997 (1997): Babel Fish automatic translation
1998 (1998): Yahoo Groups (formerly Yahoo! Clubs)
1998 (1998): PayPal Internet payment system
1998 (1998): Rotten Tomatoes review aggregator
1999 (1999): 2ch Anonymous textboard
1999 (1999): i-mode mobile internet service
1999 (1999): Napster peer-to-peer file sharing
2000 (2000): Baidu search engine
2001 (2001): 2chan Anonymous imageboard
2001 (2001): BitTorrent peer-to-peer file sharing
2001 (2001): Wikipedia, the free encyclopedia
2003 (2003): LinkedIn business networking
2003 (2003): Myspace social networking site
2003 (2003): Skype Internet voice calls
2003 (2003): iTunes Store
2003 (2003): 4chan Anonymous imageboard
2003 (2003): The Pirate Bay, torrent file host
2004 (2004): Facebook social networking site
2004 (2004): Podcast media file series
2004 (2004): Flickr image hosting
2005 (2005): YouTube video sharing
2005 (2005): Reddit link voting
2005 (2005): Google Earth virtual globe
2006 (2006): Twitter microblogging
2007 (2007): WikiLeaks anonymous news and information leaks
2007 (2007): Google Street View
2007 (2007): Kindle, e-reader and virtual bookshop
2008 (2008): Amazon Elastic Compute Cloud (EC2)
2008 (2008): Dropbox cloud-based file hosting
2008 (2008): Encyclopedia of Life, a collaborative encyclopedia intended to document all living species
2008 (2008): Spotify, a DRM-based music streaming service
2009 (2009): Bing search engine
2009 (2009): Google Docs, Web-based word processor, spreadsheet, presentation, form, and data storage service
2009 (2009): Kickstarter, a threshold pledge system
2009 (2009): Bitcoin, a digital currency
2010 (2010): Instagram, photo sharing and social networking
2011 (2011): Google+, social networking
2011 (2011): Snapchat, photo sharing
2012 (2012): Coursera, massive open online courses
2016 (2016): TikTok, video sharing and social networking

Early research[edit]
Diagram of the first internetworked connection
An SRI International Packet Radio Van, used for the first three-way internetworked transmission
Initially referred to as the DOD Internet Architecture Model, the Internet protocol suite has its roots in research and development sponsored by the Defense Advanced Research Projects Agency (DARPA) in the late 1960s.[3] After DARPA initiated the pioneering ARPANET in 1969, Steve Crocker established a "Networking Working Group" which developed a host-host protocol, the Network Control Program (NCP).[4] In the early 1970s, DARPA started work on several other data transmission technologies, including mobile packet radio, packet satellite service, local area networks, and other data networks in the public and private domains. In 1972, Bob Kahn joined the DARPA Information Processing Technology Office, where he worked on both satellite packet networks and ground-based radio packet networks, and recognized the value of being able to communicate across both. In the spring of 1973, Vinton Cerf joined Kahn with the goal of designing the next protocol generation for the ARPANET to enable internetworking.[5][6] They drew on the experience from the ARPANET research community, the International Network Working Group, which Cerf chaired, and researchers at Xerox PARC.[7][8][9]
By the summer of 1973, Kahn and Cerf had worked out a fundamental reformulation, in which the differences between local network protocols were hidden by using a common internetwork protocol, and, instead of the network being responsible for reliability, as in the existing ARPANET protocols, this function was delegated to the hosts. Cerf credits Louis Pouzin and Hubert Zimmermann, designers of the CYCLADES network, with important influences on this design.[10][11] The new protocol was implemented as the Transmission Control Program in 1974 by Cerf, Yogen Dalal and Carl Sunshine.[12]
Initially, the Transmission Control Program (the Internet Protocol did not then exist as a separate protocol) provided only a reliable byte stream service to its users, not datagrams.[13] Several versions were developed through the Internet Experiment Note series.[14] As experience with the protocol grew, collaborators recommended division of functionality into layers of distinct protocols, allowing users direct access to datagram service. Advocates included Bob Metcalfe and Yogen Dalal at Xerox PARC;[15][16] Danny Cohen, who needed it for his packet voice work; and Jonathan Postel of the University of Southern California's Information Sciences Institute, who edited the Request for Comments (RFCs), the technical and strategic document series that has both documented and catalyzed Internet development.[17] Postel stated, "We are screwing up in our design of Internet protocols by violating the principle of layering."[18] Encapsulation of different mechanisms was intended to create an environment where the upper layers could access only what was needed from the lower layers. A monolithic design would be inflexible and lead to scalability issues. In version 4, written in 1978, Postel split the Transmission Control Program into two distinct protocols, the Internet Protocol as connectionless layer and the Transmission Control Protocol as a reliable connection-oriented service.[19][20][21][nb 1]
The design of the network included the recognition that it should provide only the functions of efficiently transmitting and routing traffic between end nodes and that all other intelligence should be located at the edge of the network, in the end nodes. This end-to-end principle was pioneered by Louis Pouzin in the CYCLADES network,[22] based on the ideas of Donald Davies.[23][24] Using this design, it became possible to connect other networks to the ARPANET that used the same principle, irrespective of other local characteristics, thereby solving Kahn's initial internetworking problem. A popular expression is that TCP/IP, the eventual product of Cerf and Kahn's work, can run over "two tin cans and a string."[citation needed] Years later, as a joke in 1999, the IP over Avian Carriers formal protocol specification was created[25] and successfully tested two years later. 10 years later still, it was adapted for IPv6.[26]
DARPA contracted with BBN Technologies, Stanford University, and the University College London to develop operational versions of the protocol on several hardware platforms.[27] During development of the protocol the version number of the packet routing layer progressed from version 1 to version 4, the latter of which was installed in the ARPANET in 1983. It became known as Internet Protocol version 4 (IPv4) as the protocol that is still in use in the Internet, alongside its current successor, Internet Protocol version 6 (IPv6).

Early implementation[edit]
In 1975, a two-network IP communications test was performed between Stanford and University College London. In November 1977, a three-network IP test was conducted between sites in the US, the UK, and Norway. Several other IP prototypes were developed at multiple research centers between 1978 and 1983.[14]
A computer called a router is provided with an interface to each network. It forwards network packets back and forth between them.[28] Originally a router was called gateway, but the term was changed to avoid confusion with other types of gateways.[29]

Adoption[edit]
In March 1982, the US Department of Defense declared TCP/IP as the standard for all military computer networking.[30][31][32] In the same year, NORSAR/NDRE and Peter Kirstein's research group at University College London adopted the protocol.[33] The migration of the ARPANET from NCP to TCP/IP was officially completed on flag day January 1, 1983, when the new protocols were permanently activated.[30][34]
In 1985, the Internet Advisory Board (later Internet Architecture Board) held a three-day TCP/IP workshop for the computer industry, attended by 250 vendor representatives, promoting the protocol and leading to its increasing commercial use. In 1985, the first Interop conference focused on network interoperability by broader adoption of TCP/IP. The conference was founded by Dan Lynch, an early Internet activist. From the beginning, large corporations, such as IBM and DEC, attended the meeting.[35][36]
IBM, AT&T and DEC were the first major corporations to adopt TCP/IP, this despite having competing proprietary protocols. In IBM, from 1984, Barry Appelman's group did TCP/IP development. They navigated the corporate politics to get a stream of TCP/IP products for various IBM systems, including MVS, VM, and OS/2. At the same time, several smaller companies, such as FTP Software and the Wollongong Group, began offering TCP/IP stacks for DOS and Microsoft Windows.[37] The first VM/CMS TCP/IP stack came from the University of Wisconsin.[38]
Some of the early TCP/IP stacks were written single-handedly by a few programmers. Jay Elinsky and Oleg Vishnepolsky of IBM Research wrote TCP/IP stacks for VM/CMS and OS/2, respectively.[citation needed] In 1984 Donald Gillies at MIT wrote a ntcp multi-connection TCP which runs atop the IP/PacketDriver layer maintained by John Romkey at MIT in 1983–84.  Romkey leveraged this TCP in 1986 when FTP Software was founded.[39][40] Starting in 1985, Phil Karn created a multi-connection TCP application for ham radio systems (KA9Q TCP).[41]
The spread of TCP/IP was fueled further in June 1989, when the University of California, Berkeley agreed to place the TCP/IP code developed for BSD UNIX into the public domain. Various corporate vendors, including IBM, included this code in commercial TCP/IP software releases. For Windows 3.1, the dominant PC operating system among consumers in the first half of the 1990s, Peter Tattam's release of the Trumpet Winsock TCP/IP stack was key to bringing the Internet to home users. Trumpet Winsock allowed TCP/IP operations over a serial connection (SLIP or PPP). The typical home PC of the time had an external Hayes-compatible modem connected via an RS-232 port with an 8250 or 16550 UART which required this type of stack. Later, Microsoft would release their own TCP/IP add-on stack for Windows for Workgroups 3.11 and a native stack in Windows 95. These events helped cement TCP/IP's dominance over other protocols on Microsoft-based networks, which included IBM's Systems Network Architecture (SNA), and on other platforms such as Digital Equipment Corporation's DECnet, Open Systems Interconnection (OSI), and Xerox Network Systems (XNS).
Nonetheless, for a period in the late 1980s and early 1990s, engineers, organizations and nations were polarized over the issue of which standard, the OSI model or the Internet protocol suite, would result in the best and most robust computer networks.[42][43][44]

Formal specification and standards[edit]
The technical standards underlying the Internet protocol suite and its constituent protocols have been delegated to the Internet Engineering Task Force (IETF).[45][46]
The characteristic architecture of the Internet protocol suite is its broad division into operating scopes for the protocols that constitute its core functionality. The defining specifications of the suite are RFC 1122 and 1123, which broadly outlines four abstraction layers (as well as related protocols); the link layer, IP layer, transport layer, and application layer, along with support protocols.[1][2] These have stood the test of time, as the IETF has never modified this structure. As such a model of networking, the Internet protocol suite predates the OSI model, a more comprehensive reference framework for general networking systems.[44]

Key architectural principles[edit]
See also: Communication protocol § Software layering
Conceptual data flow in a simple network topology of two hosts (A and B) connected by a link between their respective routers. The application on each host executes read and write operations as if the processes were directly connected to each other by some kind of data pipe. After establishment of this pipe, most details of the communication are hidden from each process, as the underlying principles of communication are implemented in the lower protocol layers. In a common application analogy, Host A's web browser appears directly connected to Host B's web server via an Application Layer HTTP session identified by an address like a cookie. At the transport layer the communication appears as process-to-process communication,[6] each process addressed by a port number, without knowledge of the application data structures and the connecting routers. Finally, at the internetworking layer using the Internet Protocol (IP), packets of bytes traverse individual network boundaries as each router forwards a packet towards its destination IP address.
Encapsulation of application data descending through the layers described in RFC 1122
The end-to-end principle has evolved over time. Its original expression put the maintenance of state and overall intelligence at the edges, and assumed the Internet that connected the edges retained no state and concentrated on speed and simplicity. Real-world needs for firewalls, network address translators, web content caches and the like have forced changes in this principle.[47]
The robustness principle states: "In general, an implementation must be conservative in its sending behavior, and liberal in its receiving behavior. That is, it must be careful to send well-formed datagrams, but must accept any datagram that it can interpret (e.g., not object to technical errors where the meaning is still clear)."[48]: 23  "The second part of the principle is almost as important: software on other hosts may contain deficiencies that make it unwise to exploit legal but obscure protocol features."[1]: 13 
Encapsulation is used to provide abstraction of protocols and services. Encapsulation is usually aligned with the division of the protocol suite into layers of general functionality. In general, an application (the highest level of the model) uses a set of protocols to send its data down the layers. The data is further encapsulated at each level.
An early pair of architectural documents, RFC 1122 and 1123, titled Requirements for Internet Hosts, emphasizes architectural principles over layering.[49] RFC 1122/23 are structured in sections referring to layers, but the documents refer to many other architectural principles, and do not emphasize layering. They loosely defines a four-layer model, with the layers having names, not numbers, as follows:[1][2]

The application layer is the scope within which applications, or processes, create user data and communicate this data to other applications on another or the same host. The applications make use of the services provided by the underlying lower layers, especially the transport layer which provides reliable or unreliable pipes to other processes. The communications partners are characterized by the application architecture, such as the client–server model and peer-to-peer networking. This is the layer in which all application protocols, such as SMTP, FTP, SSH, HTTP, operate. Processes are addressed via ports which essentially represent services.
The transport layer performs host-to-host communications on either the local network or remote networks separated by routers.[50] It provides a channel for the communication needs of applications. UDP is the basic transport layer protocol, providing an unreliable connectionless datagram service. The Transmission Control Protocol provides flow-control, connection establishment, and reliable transmission of data.
The internet layer exchanges datagrams across network boundaries. It provides a uniform networking interface that hides the actual topology (layout) of the underlying network connections.  It is therefore also the layer that establishes internetworking. Indeed, it defines and establishes the Internet. This layer defines the addressing and routing structures used for the TCP/IP protocol suite. The primary protocol in this scope is the Internet Protocol, which defines IP addresses.[51][failed verification][52] Its function in routing is to transport datagrams to the next host, functioning as an IP router, that has the connectivity to a network closer to the final data destination.[52][failed verification]
The link layer defines the networking methods within the scope of the local network link on which hosts communicate without intervening routers. This layer includes the protocols used to describe the local network topology and the interfaces needed to effect the transmission of internet layer datagrams to next-neighbor hosts.[53]
Link layer[edit]
Main article: Link layer
The protocols of the link layer operate within the scope of the local network connection to which a host is attached. This regime is called the link in TCP/IP parlance and is the lowest component layer of the suite. The link includes all hosts accessible without traversing a router. The size of the link is therefore determined by the networking hardware design. In principle, TCP/IP is designed to be hardware independent and may be implemented on top of virtually any link-layer technology. This includes not only hardware implementations but also virtual link layers such as virtual private networks and networking tunnels.
The link layer is used to move packets between the internet layer interfaces of two different hosts on the same link. The processes of transmitting and receiving packets on the link can be controlled in the device driver for the network card, as well as in firmware or by specialized chipsets. These perform functions, such as framing, to prepare the internet layer packets for transmission, and finally transmit the frames to the physical layer and over a transmission medium. The TCP/IP model includes specifications for translating the network addressing methods used in the Internet Protocol to link-layer addresses, such as media access control (MAC) addresses. All other aspects below that level, however, are implicitly assumed to exist and are not explicitly defined in the TCP/IP model.
The link layer in the TCP/IP model has corresponding functions in Layer 2 of the OSI model.

Internet layer[edit]
Main article: Internet layer
Internetworking requires sending data from the source network to the destination network. This process is called routing and is supported by host addressing and identification using the hierarchical IP addressing system. The internet layer provides an unreliable datagram transmission facility between hosts located on potentially different IP networks by forwarding datagrams to an appropriate next-hop router for further relaying to its destination. The internet layer has the responsibility of sending packets across potentially multiple networks. With this functionality, the internet layer makes possible internetworking, the interworking of different IP networks, and it essentially establishes the Internet.
The internet layer does not distinguish between the various transport layer protocols. IP carries data for a variety of different upper layer protocols. These protocols are each identified by a unique protocol number: for example, Internet Control Message Protocol (ICMP) and Internet Group Management Protocol (IGMP) are protocols 1 and 2, respectively.
The Internet Protocol is the principal component of the internet layer, and it defines two addressing systems to identify network hosts and to locate them on the network. The original address system of the ARPANET and its successor, the Internet, is Internet Protocol version 4 (IPv4). It uses a 32-bit IP address and is therefore capable of identifying approximately four billion hosts. This limitation was eliminated in 1998 by the standardization of Internet Protocol version 6 (IPv6) which uses 128-bit addresses. IPv6 production implementations emerged in approximately 2006.

Transport layer[edit]
See also: Transport layer
The transport layer establishes basic data channels that applications use for task-specific data exchange. The layer establishes host-to-host connectivity in the form of end-to-end message transfer services that are independent of the underlying network and independent of the structure of user data and the logistics of exchanging information. Connectivity at the transport layer can be categorized as either connection-oriented, implemented in TCP, or connectionless, implemented in UDP. The protocols in this layer may provide error control, segmentation, flow control, congestion control, and application addressing (port numbers).
For the purpose of providing process-specific transmission channels for applications, the layer establishes the concept of the network port. This is a numbered logical construct allocated specifically for each of the communication channels an application needs. For many types of services, these port numbers have been standardized so that client computers may address specific services of a server computer without the involvement of service discovery or directory services.
Because IP provides only a best-effort delivery, some transport-layer protocols offer reliability.
TCP is a connection-oriented protocol that addresses numerous reliability issues in providing a reliable byte stream:

data arrives in-order
data has minimal error (i.e., correctness)
duplicate data is discarded
lost or discarded packets are resent
includes traffic congestion control
The newer Stream Control Transmission Protocol (SCTP) is also a reliable, connection-oriented transport mechanism. It is message-stream-oriented, not byte-stream-oriented like TCP, and provides multiple streams multiplexed over a single connection. It also provides multihoming support, in which a connection end can be represented by multiple IP addresses (representing multiple physical interfaces), such that if one fails, the connection is not interrupted. It was developed initially for telephony applications (to transport SS7 over IP).
Reliability can also be achieved by running IP over a reliable data-link protocol such as the High-Level Data Link Control (HDLC).
The User Datagram Protocol (UDP) is a connectionless datagram protocol. Like IP, it is a best-effort, unreliable protocol. Reliability is addressed through error detection using a checksum algorithm. UDP is typically used for applications such as streaming media (audio, video, Voice over IP, etc.) where on-time arrival is more important than reliability, or for simple query/response applications like DNS lookups, where the overhead of setting up a reliable connection is disproportionately large. Real-time Transport Protocol (RTP) is a datagram protocol that is used over UDP and is designed for real-time data such as streaming media.
The applications at any given network address are distinguished by their TCP or UDP port. By convention, certain  well-known ports are associated with specific applications.
The TCP/IP model's transport or host-to-host layer corresponds roughly to the fourth layer in the OSI model, also called the transport layer.
QUIC is rapidly emerging as an alternative transport protocol. Whilst it is technically carried via UDP packets it seeks to offer enhanced transport connectivity relative to TCP. HTTP/3 works exclusively via QUIC.

Application layer[edit]
See also: Application layer § Internet protocol suite
The application layer includes the protocols used by most applications for providing user services or exchanging application data over the network connections established by the lower-level protocols. This may include some basic network support services such as routing protocols and host configuration. Examples of application layer protocols include the Hypertext Transfer Protocol (HTTP), the File Transfer Protocol (FTP), the Simple Mail Transfer Protocol (SMTP), and the Dynamic Host Configuration Protocol (DHCP).[54] Data coded according to application layer protocols are  encapsulated into transport layer protocol units (such as TCP streams or UDP datagrams), which in turn use lower layer protocols to effect actual data transfer.
The TCP/IP model does not consider the specifics of formatting and presenting data and does not define additional layers between the application and transport layers as in the OSI model (presentation and session layers). According to the TCP/IP model, such functions are the realm of libraries and application programming interfaces. The application layer in the TCP/IP model is often compared to a combination of the fifth (session), sixth (presentation), and seventh (application) layers of the OSI model.
Application layer protocols are often associated with particular client–server applications, and common services have well-known port numbers reserved by the Internet Assigned Numbers Authority (IANA). For example, the HyperText Transfer Protocol uses server port 80 and Telnet uses server port 23. Clients connecting to a service usually use ephemeral ports, i.e., port numbers assigned only for the duration of the transaction at random or from a specific range configured in the application.
At the application layer, the TCP/IP model distinguishes between user protocols and support protocols.[1]: §1.1.3  Support protocols provide services to a system of network infrastructure. User protocols are used for actual user applications. For example, FTP is a user protocol and DNS is a support protocol.
Although the applications are usually aware of key qualities of the transport layer connection such as the endpoint IP addresses and port numbers, application layer protocols generally treat the transport layer (and lower) protocols as black boxes which provide a stable network connection across which to communicate. The transport layer and lower-level layers are unconcerned with the specifics of application layer protocols. Routers and switches do not typically examine the encapsulated traffic, rather they just provide a conduit for it. However, some firewall and bandwidth throttling applications use deep packet inspection to interpret application data. An example is the Resource Reservation Protocol (RSVP).[citation needed] It is also sometimes necessary for Applications affected by NAT to consider the application payload.

Layering evolution and representations in the literature[edit]
The Internet protocol suite evolved through research and development funded over a period of time. In this process, the specifics of protocol components and their layering changed. In addition, parallel research and commercial interests from industry associations competed with design features. In particular, efforts in the International Organization for Standardization led to a similar goal, but with a wider scope of networking in general. Efforts to consolidate the two principal schools of layering, which were superficially similar, but diverged sharply in detail, led independent textbook authors to formulate abridging teaching tools.
The following table shows various such networking models. The number of layers varies between three and seven.



Arpanet Reference Model(RFC 871)

Internet Standard(RFC 1122)

Internet model(Cisco Academy[55])

TCP/IP 5-layer reference model(Kozierok,[56] Comer[57])

TCP/IP 5-layer reference model(Tanenbaum[58])

TCP/IP protocol suite or Five-layer Internet model(Forouzan,[59] Kurose[60])

TCP/IP model(Stallings[61])

OSI model(ISO/IEC 7498-1:1994[62])


Three layers

Four layers

Four layers

Four+one layers

Five layers

Five layers

Five layers

Seven layers


Application/ Process

Application

Application

Application

Application

Application

Application

Application


Presentation


Session


Host-to-host

Transport

Transport

Transport

Transport

Transport

Host-to-host or transport

Transport


Internet

Internetwork

Internet

Internet

Network

Internet

Network


Network interface

Link

Network interface

Data link (Network interface)

Data link

Data link

Network access

Data link


—

—

—

(Hardware)

Physical

Physical

Physical

Physical

Some of the networking models are from textbooks, which are secondary sources that may conflict with the intent of RFC 1122 and other IETF primary sources.[63]

Comparison of TCP/IP and OSI layering[edit]
See also: OSI model § Comparison with TCP/IP model
The three top layers in the OSI model, i.e. the application layer, the presentation layer and the session layer, are not distinguished separately in the TCP/IP model which only has an application layer above the transport layer. While some pure OSI protocol applications, such as X.400, also combined them, there is no requirement that a TCP/IP protocol stack must impose monolithic architecture above the transport layer. For example, the NFS application protocol runs over the External Data Representation (XDR) presentation protocol, which, in turn, runs over a protocol called Remote Procedure Call (RPC). RPC provides reliable record transmission, so it can safely use the best-effort UDP transport.
Different authors have interpreted the TCP/IP model differently, and disagree whether the link layer, or any aspect of the TCP/IP model, covers OSI layer 1 (physical layer) issues, or whether TCP/IP assumes a hardware layer exists below the link layer. Several authors have attempted to incorporate the OSI model's layers 1 and 2 into the TCP/IP model since these are commonly referred to in modern standards (for example, by IEEE and ITU). This often results in a model with five layers, where the link layer or network access layer is split into the OSI model's layers 1 and 2.[citation needed]
The IETF protocol development effort is not concerned with strict layering. Some of its protocols may not fit cleanly into the OSI model, although RFCs sometimes refer to it and often use the old OSI layer numbers. The IETF has repeatedly stated[45][failed verification] that Internet Protocol and architecture development is not intended to be OSI-compliant. RFC 3439, referring to the internet architecture, contains a section entitled: "Layering Considered Harmful".[63]
For example, the session and presentation layers of the OSI suite are considered to be included in the application layer of the TCP/IP suite. The functionality of the session layer can be found in protocols like HTTP and SMTP and is more evident in protocols like Telnet and the Session Initiation Protocol (SIP). Session-layer functionality is also realized with the port numbering of the TCP and UDP protocols, which are included in the transport layer of the TCP/IP suite. Functions of the presentation layer are realized in the TCP/IP applications with the MIME standard in data exchange.
Another difference is in the treatment of routing protocols. The OSI routing protocol IS-IS belongs to the network layer, and does not depend on CLNS for delivering packets from one router to another, but defines its own layer-3 encapsulation. In contrast, OSPF, RIP, BGP and other routing protocols defined by the IETF are transported over IP, and, for the purpose of sending and receiving routing protocol packets, routers act as hosts. As a consequence, routing protocols are included in the application layer.[28] Some authors, such as Tanenbaum in Computer Networks, describe routing protocols in the same layer as IP, reasoning that routing protocols inform decisions made by the forwarding process of routers.
IETF protocols can be encapsulated recursively, as demonstrated by tunnelling protocols such as Generic Routing Encapsulation (GRE). GRE uses the same mechanism that OSI uses for tunnelling at the network layer.

Implementations[edit]
This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (March 2014) (Learn how and when to remove this message)
The Internet protocol suite does not presume any specific hardware or software environment.  It only requires that hardware and a software layer exists that is capable of sending and receiving packets on a computer network. As a result, the suite has been implemented on essentially every computing platform. A minimal implementation of TCP/IP includes the following: Internet Protocol (IP), Address Resolution Protocol (ARP), Internet Control Message Protocol (ICMP), Transmission Control Protocol (TCP), User Datagram Protocol (UDP), and Internet Group Management Protocol (IGMP). In addition to IP, ICMP, TCP, UDP, Internet Protocol version 6 requires Neighbor Discovery Protocol (NDP), ICMPv6, and Multicast Listener Discovery (MLD) and is often accompanied by an integrated IPSec security layer.

See also[edit]
BBN Report 1822, an early layered network model
Internetwork Packet Exchange
Fast Local Internet Protocol
List of automation protocols
List of information technology initialisms
List of IP protocol numbers
Lists of network protocols
List of TCP and UDP port numbers
Notes[edit]


^ For records of discussions leading up to the TCP/IP split, see the series of Internet Experiment Notes at the Internet Experiment Notes Index.


References[edit]


^ a b c d e R. Braden, ed. (October 1989). Requirements for Internet Hosts -- Communication Layers. Network Working Group. doi:10.17487/RFC1122. STD 3. RFC 1122. Internet Standard 3.  Updated by RFC 1349, 4379, 5884, 6093, 6298, 6633, 6864, 8029 and 9293.
                        

^ a b c R. Braden, ed. (October 1989). Requirements for Internet Hosts -- Application and Support. Network Working Group. doi:10.17487/RFC1123. STD 3. RFC 1123. Internet Standard 3.  Updated by RFC 1349, 2181, 5321, 5966 and 7766.
                        

^ Cerf, Vinton G. & Cain, Edward (October 1983). "The DoD Internet Architecture Model". Computer Networks. 7 (5). North-Holland: 307–318. doi:10.1016/0376-5075(83)90042-9.

^ J. Reynolds; J. Postel (November 1987). THE REQUEST FOR COMMENTS REFERENCE GUIDE. Network Working Group. doi:10.17487/RFC1000. RFC 1000. Status Unknown.  Obsoletes RFC 84, 100, 160, 170, 200, 598, 699, 800, 899 and 999.
                        

^ Hafner, Katie; Lyon, Matthew (1996). Where wizards stay up late : the origins of the Internet. Internet Archive. New York : Simon & Schuster. p. 263. ISBN 978-0-684-81201-4.

^ a b Russell, Andrew L. (2014). Open standards and the digital age: history, ideology, and networks. New York: Cambridge Univ Press. p. 196. ISBN 978-1107039193. Archived from the original on December 28, 2022. Retrieved December 20, 2022.

^ Abbate, Janet (2000). Inventing the Internet. MIT Press. pp. 123–4. ISBN 978-0-262-51115-5. Archived from the original on January 17, 2023. Retrieved May 15, 2020.

^ Taylor, Bob (October 11, 2008), "Oral History of Robert (Bob) W. Taylor" (PDF), Computer History Museum Archive, CHM Reference number: X5059.2009: 28

^ Isaacson, Walter (2014). The innovators : how a group of hackers, geniuses, and geeks created the digital revolution. Internet Archive. New York : Simon & Schuster. ISBN 978-1-4767-0869-0.

^ Cerf, V.; Kahn, R. (1974). "A Protocol for Packet Network Intercommunication" (PDF). IEEE Transactions on Communications. 22 (5): 637–648. doi:10.1109/TCOM.1974.1092259. ISSN 1558-0857. Archived (PDF) from the original on October 10, 2022. Retrieved October 18, 2015. The authors wish to thank a number of colleagues for helpful comments during early discussions of international network protocols, especially R. Metcalfe, R. Scantlebury, D. Walden, and H. Zimmerman; D. Davies and L. Pouzin who constructively commented on the fragmentation and accounting issues; and S. Crocker who commented on the creation and destruction of associations.

^ "The internet's fifth man". Economist. December 13, 2013. Archived from the original on April 19, 2020. Retrieved September 11, 2017. In the early 1970s Mr Pouzin created an innovative data network that linked locations in France, Italy and Britain. Its simplicity and efficiency pointed the way to a network that could connect not just dozens of machines, but millions of them. It captured the imagination of Dr Cerf and Dr Kahn, who included aspects of its design in the protocols that now power the internet.

^ V. Cerf; Y. Dalal; C. Sunshine (December 1974). SPECIFICATION OF INTERNET TRANSMISSION CONTROL PROGRAM. Network Working Group. doi:10.17487/RFC0675. RFC 675. Obsolete.  Obsoleted by RFC 7805. NIC 2. INWG 72.
                        

^ Cerf, Vinton (March 1977). "Specification of Internet Transmission Control Protocol TCP (Version 2)" (PDF). Archived (PDF) from the original on May 25, 2022. Retrieved August 4, 2022.

^ a b Cerf, Vinton G. (April 1, 1980). "Final Report of the Stanford University TCP Project".

^ Panzaris, Georgios (2008). Machines and romances: the technical and narrative construction of networked computing as a general-purpose platform, 1960–1995. Stanford University. p. 128. Archived from the original on January 17, 2023. Retrieved September 5, 2019.

^ Pelkey, James L. (2007). "Yogen Dalal". Entrepreneurial Capitalism and Innovation: A History of Computer Communications, 1968–1988. Archived from the original on October 8, 2022. Retrieved October 8, 2020.

^ Internet Hall of Fame

^ Postel, Jon (August 15, 1977), 2.3.3.2 Comments on Internet Protocol and TCP, IEN 2, archived from the original on May 16, 2019, retrieved June 11, 2016

^ Abbate, Inventing the Internet, 129–30.

^ Vinton G. Cerf (October 1980). "Protocols for Interconnected Packet Networks". ACM SIGCOMM Computer Communication Review. 10 (4): 10–11.

^ Russell, Andrew L. (2007). "Industrial Legislatures": Consensus Standardization in the Second and Third Industrial Revolutions (PDF) (PhD thesis). Johns Hopkins University. Archived (PDF) from the original on December 28, 2022. Retrieved December 28, 2022.

^ Bennett, Richard (September 2009). "Designed for Change: End-to-End Arguments, Internet Innovation, and the Net Neutrality Debate" (PDF). Information Technology and Innovation Foundation. pp. 7, 11. Retrieved September 11, 2017.

^ Pelkey, James. "8.3 CYCLADES Network and Louis Pouzin 1971-1972". Entrepreneurial Capitalism and Innovation: A History of Computer Communications 1968-1988. Archived from the original on June 17, 2021. Retrieved November 21, 2021. The inspiration for datagrams had two sources. One was Donald Davies' studies. He had done some simulation of datagram networks, although he had not built any, and it looked technically viable. The second inspiration was I like things simple. I didn't see any real technical motivation to overlay two levels of end-to-end protocols. I thought one was enough.

^ Davies, Donald; Bartlett, Keith; Scantlebury, Roger; Wilkinson, Peter (October 1967). A Digital Communication Network for Computers Giving Rapid Response at remote Terminals (PDF). ACM Symposium on Operating Systems Principles. Archived (PDF) from the original on October 10, 2022. Retrieved September 15, 2020. all users of the network will provide themselves with some kind of error control

^ D. Waitzman (April 1, 1990). A Standard for the Transmission of IP Datagrams on Avian Carriers. Network Working Group. doi:10.17487/RFC1149. RFC 1149. Experimental.  This is an April Fools' Day Request for Comments.
                        

^ B. Carpenter; R. Hinden (April 1, 2011). Adaptation of RFC 1149 for IPv6. Internet Engineering Task Force. doi:10.17487/RFC6214. ISSN 2070-1721. RFC 6214. Informational.  This is an April Fools' Day Request for Comments.
                        

^ by Vinton Cerf, as told to Bernard Aboba (1993). "How the Internet Came to Be". Archived from the original on September 26, 2017. Retrieved September 25, 2017. We began doing concurrent implementations at Stanford, BBN, and University College London. So effort at developing the Internet protocols was international from the beginning.

^ a b F. Baker, ed. (June 1995). Requirements for IP Version 4 Routers. Network Working Group. doi:10.17487/RFC1812. RFC 1812. Proposed Standard.  Obsoletes RFC 1716 and 1009. Updated by RFC 2644 and 6633.
                        

^ Crowell, William; Contos, Brian; DeRodeff, Colby (2011). Physical and Logical Security Convergence: Powered By Enterprise Security Management. Syngress. p. 99. ISBN 9780080558783.

^ a b Ronda Hauben. "From the ARPANET to the Internet". TCP Digest (UUCP). Archived from the original on July 21, 2009. Retrieved July 5, 2007.

^ IEN 207.

^ IEN 152.

^ Hauben, Ronda (2004). "The Internet: On its International Origins and Collaborative Vision". Amateur Computerist. 12 (2). Retrieved May 29, 2009. Mar '82 – Norway leaves the ARPANET and become an Internet connection via TCP/IP over SATNET. Nov '82 – UCL leaves the ARPANET and becomes an Internet connection.

^ "TCP/IP Internet Protocol". Archived from the original on January 1, 2018. Retrieved December 31, 2017.

^ Leiner, Barry M.; et al. (1997), Brief History of the Internet (PDF), Internet Society, p. 15, archived (PDF) from the original on January 18, 2018, retrieved January 17, 2018

^ "Vinton G. Cerf : An Oral History". Stanford Oral History Collections - Spotlight at Stanford. 2020. p. 113, 129, 145. Retrieved June 29, 2024.

^ "Using Wollongong TCP/IP with Windows for Workgroups 3.11". Microsoft Support. Archived from the original on January 12, 2012.

^ "A Short History of Internet Protocols at CERN". Archived from the original on November 10, 2016. Retrieved September 12, 2016.

^ Baker, Steven; Gillies, Donald W. "Desktop TCP/IP at middle age". Archived from the original on August 21, 2015. Retrieved September 9, 2016.

^ Romkey, John (February 17, 2011). "About". Archived from the original on November 5, 2011. Retrieved September 12, 2016.

^ Phil Karn, KA9Q TCP Download Website

^ Andrew L. Russell (July 30, 2013). "OSI: The Internet That Wasn't". IEEE Spectrum. Vol. 50, no. 8. Archived from the original on August 1, 2017. Retrieved February 6, 2020.

^ Russell, Andrew L. "Rough Consensus and Running Code' and the Internet-OSI Standards War" (PDF). IEEE Annals of the History of Computing. Archived from the original (PDF) on November 17, 2019.

^ a b Davies, Howard; Bressan, Beatrice (April 26, 2010). A History of International Research Networking: The People who Made it Happen. John Wiley & Sons. ISBN 978-3-527-32710-2. Archived from the original on January 17, 2023. Retrieved November 7, 2020.

^ a b "Introduction to the IETF". IETF. Retrieved February 27, 2024.

^ Morabito, Roberto; Jimenez, Jaime (June 2020). "IETF Protocol Suite for the Internet of Things: Overview and Recent Advancements". IEEE Communications Standards Magazine. 4 (2): 41–49. arXiv:2003.10279. doi:10.1109/mcomstd.001.1900014. ISSN 2471-2825.

^ Blumenthal, Marjory S.; Clark, David D. (August 2001). "Rethinking the design of the Internet: The end-to-end arguments vs. the brave new world" (PDF). Archived (PDF) from the original on October 8, 2022. Retrieved October 8, 2022.

^ J. Postel, ed. (September 1981). INTERNET PROTOCOL - DARPA INTERNET PROGRAM PROTOCOL SPECIFICATION. IETF. doi:10.17487/RFC0791. STD 5. RFC 791. IEN 128, 123, 111, 80, 54, 44, 41, 28, 26. Internet Standard 5.  Obsoletes RFC 760. Updated by RFC 1349, 2474 and 6864.
                        

^ B. Carpenter, ed. (June 1996). Architectural Principles of the Internet. Network Working Group. doi:10.17487/RFC1958. RFC 1958. Informational.  Updated by RFC 3439.
                        

^ Hunt, Craig (2002). TCP/IP Network Administration (3rd ed.). O'Reilly. pp. 9–10. ISBN 9781449390785.

^ Guttman, E. (1999). "Service location protocol: automatic discovery of IP network services". IEEE Internet Computing. 3 (4): 71–80. doi:10.1109/4236.780963. ISSN 1089-7801.

^ a b Zheng, Kai (July 2017). "Enabling "Protocol Routing": Revisiting Transport Layer Protocol Design in Internet Communications". IEEE Internet Computing. 21 (6): 52–57. doi:10.1109/mic.2017.4180845. ISSN 1089-7801.

^ Huang, Jing-lian (April 7, 2009). "Cross layer link adaptation scheme in wireless local area network". Journal of Computer Applications. 29 (2): 518–520. doi:10.3724/sp.j.1087.2009.00518 (inactive November 1, 2024). ISSN 1001-9081.{{cite journal}}:  CS1 maint: DOI inactive as of November 2024 (link)

^ Stevens, W. Richard (February 1994). TCP/IP Illustrated: the protocols. Addison-Wesley. ISBN 0-201-63346-9. Archived from the original on April 22, 2012. Retrieved April 25, 2012.

^ Dye, Mark; McDonald, Rick; Rufi, Antoon (October 29, 2007). Network Fundamentals, CCNA Exploration Companion Guide. Cisco Press. ISBN 9780132877435. Retrieved September 12, 2016 – via Google Books.

^ Kozierok, Charles M. (January 1, 2005). The TCP/IP Guide: A Comprehensive, Illustrated Internet Protocols Reference. No Starch Press. ISBN 9781593270476. Retrieved September 12, 2016 – via Google Books.

^ Comer, Douglas (January 1, 2006). Internetworking with TCP/IP: Principles, protocols, and architecture. Prentice Hall. ISBN 0-13-187671-6. Retrieved September 12, 2016 – via Google Books.

^ Tanenbaum, Andrew S. (January 1, 2003). Computer Networks. Prentice Hall PTR. p. 42. ISBN 0-13-066102-3. Retrieved September 12, 2016 – via Internet Archive. networks.

^ Forouzan, Behrouz A.; Fegan, Sophia Chung (August 1, 2003). Data Communications and Networking. McGraw-Hill Higher Education. ISBN 9780072923544. Retrieved September 12, 2016 – via Google Books.

^ Kurose, James F.; Ross, Keith W. (2008). Computer Networking: A Top-Down Approach. Pearson/Addison Wesley. ISBN 978-0-321-49770-3. Archived from the original on January 23, 2016. Retrieved July 16, 2008.

^ Stallings, William (January 1, 2007). Data and Computer Communications. Prentice Hall. ISBN 978-0-13-243310-5. Retrieved September 12, 2016 – via Google Books.

^ ISO/IEC 7498-1:1994 Information technology — Open Systems Interconnection — Basic Reference Model: The Basic Model.

^ a b R. Bush; D. Meyer (December 2002). Some Internet Architectural Guidelines and Philosophy. Network Working Group. doi:10.17487/RFC3439. RFC 3439. Informational.  Updates RFC 1958.
                        


Bibliography[edit]
Douglas E. Comer (2001). Internetworking with TCP/IP – Principles, Protocols and Architecture. CET [i. e.] Computer Equipment and Trade. ISBN 86-7991-142-9.
Joseph G. Davies; Thomas F. Lee (2003). Microsoft Windows Server 2003 TCP/IP Protocols and Services. Microsoft Press. ISBN 0-7356-1291-9.
Forouzan, Behrouz A. (2003). TCP/IP Protocol Suite (2nd ed.). McGraw-Hill. ISBN 978-0-07-246060-5.
Craig Hunt (1998). TCP/IP Network Administration. O'Reilly. ISBN 1-56592-322-7.
Maufer, Thomas A. (1999). IP Fundamentals. Prentice Hall. ISBN 978-0-13-975483-8.
Ian McLean (2000). Windows 2000 TCP/IP Black Book. Coriolis Group Books. ISBN 1-57610-687-X.
Ajit Mungale (September 29, 2004). Pro .NET 1.1 Network Programming. Apress. ISBN 1-59059-345-6.
W. Richard Stevens (April 24, 1994). TCP/IP Illustrated, Volume 1: The Protocols. Addison-Wesley. ISBN 0-201-63346-9.
W. Richard Stevens; Gary R. Wright (1994). TCP/IP Illustrated, Volume 2: The Implementation. Addison-Wesley. ISBN 0-201-63354-X.
W. Richard Stevens (1996). TCP/IP Illustrated, Volume 3: TCP for Transactions, HTTP, NNTP, and the UNIX Domain Protocols. Addison-Wesley. ISBN 0-201-63495-3.
Andrew S. Tanenbaum (2003). Computer Networks. Prentice Hall PTR. ISBN 0-13-066102-3.
Clark, D. (1988). "The Design Philosophy of the DARPA Internet Protocols" (PDF). Proceedings of the Sigcomm '88 Symposium on Communications Architectures and Protocols. ACM. pp. 106–114. doi:10.1145/52324.52336. ISBN 978-0897912792. S2CID 6156615. Retrieved October 16, 2011.
Cerf, Vinton G.; Kahn, Robert E. (May 1974). "A Protocol for Packet Network Intercommunication" (PDF). IEEE Transactions on Communications. 22 (5): 637–648. doi:10.1109/TCOM.1974.1092259.
External links[edit]



Wikiversity has learning resources about  Internet protocol suite

Internet History – Pages on Robert Kahn, Vinton Cerf, and TCP/IP (reviewed by Cerf and Kahn).
T. Socolofsky; C. Kale (January 1991). A TCP/IP Tutorial. Network Working Group. doi:10.17487/RFC1180. RFC 1180. Informational.
The Ultimate Guide to TCP/IP
The TCP/IP Guide – A comprehensive look at the protocols and the procedure and processes involved
A Study of the ARPANET TCP/IP Digest, archived from the original on December 4, 2021




Retrieved from "https://en.wikipedia.org/w/index.php?title=Internet_protocol_suite&oldid=1287560431"
Categories: Internet protocolsHistory of the InternetNetwork architectureReference modelsHidden categories: CS1: long volume valueCS1 maint: DOI inactive as of November 2024Articles with short descriptionShort description matches WikidataUse American English from October 2020All Wikipedia articles written in American EnglishUse mdy dates from October 2020Pages with timeline metadataAll articles with unsourced statementsArticles with unsourced statements from November 2017Articles with unsourced statements from July 2018All articles with failed verificationArticles with failed verification from April 2024Articles with unsourced statements from May 2021Articles with unsourced statements from September 2024Articles needing additional references from March 2014All articles needing additional references






 This page was last edited on 27 April 2025, at 01:20 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







Internet protocol suite




























79 languages


Add topic
















