https://en.wikipedia.org/wiki/Computer_music




Computer music - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
History




Toggle History subsection





1.1
In Japan










2
Advances








3
Research




Toggle Research subsection





3.1
Music composed and performed by computers








3.2
Computer-generated scores for performance by human players








3.3
Computer-aided algorithmic composition










4
Machine improvisation




Toggle Machine improvisation subsection





4.1
Statistical style modeling








4.2
Implementations








4.3
Use of artificial intelligence










5
Live coding








6
See also








7
References








8
Further reading


















Toggle the table of contents







Computer music



23 languages




БългарскиCatalàČeštinaDeutschΕλληνικάفارسیFrançais한국어HrvatskiItalianoMagyarမြန်မာဘာသာNederlands日本語PortuguêsРусскийSlovenčinaSuomiSvenskaTürkçeУкраїнськаTiếng Việt粵語

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikimedia CommonsWikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia


Application of computing technology in music
"Computer Music" redirects here. For the magazine, see Computer Music (magazine). For the record label, see PC Music.

Computer music is the application of computing technology in music composition, to help human composers create new music or to have computers independently create music, such as with algorithmic composition programs. It includes the theory and application of new and existing computer software technologies and basic aspects of music, such as sound synthesis, digital signal processing, sound design, sonic diffusion, acoustics, electrical engineering, and psychoacoustics.[1] The field of computer music can trace its roots back to the origins of electronic music, and the first experiments and innovations with electronic instruments at the turn of the 20th century.[2]


History[edit]
CSIRAC, Australia's first digital computer, as displayed at the Melbourne Museum
Much of the work on computer music has drawn on the relationship between music and mathematics, a relationship that has been noted since the Ancient Greeks described the "harmony of the spheres".
Musical melodies were first generated by the computer originally named the CSIR Mark 1 (later renamed CSIRAC) in Australia in 1950. There were newspaper reports from America and England (early and recently) that computers may have played music earlier, but thorough research has debunked these stories as there is no evidence to support the newspaper reports (some of which were speculative). Research has shown that people speculated about computers playing music, possibly because computers would make noises,[3] but there is no evidence that they did it.[4][5]
The world's first computer to play music was the CSIR Mark 1 (later named CSIRAC), which was designed and built by Trevor Pearcey and Maston Beard in the late 1940s. Mathematician Geoff Hill programmed the CSIR Mark 1 to play popular musical melodies from the very early 1950s. In 1950 the CSIR Mark 1 was used to play music, the first known use of a digital computer for that purpose. The music was never recorded, but it has been accurately reconstructed.[6][7] In 1951 it publicly played the "Colonel Bogey March"[8] of which only the reconstruction exists. However, the CSIR Mark 1 played standard repertoire and was not used to extend musical thinking or composition practice, as Max Mathews did, which is current computer-music practice.
The first music to be performed in England was a performance of the British National Anthem that was programmed by Christopher Strachey on the Ferranti Mark 1, late in 1951. Later that year, short extracts of three pieces were recorded there by a BBC outside broadcasting unit: the National Anthem, "Baa, Baa, Black Sheep", and "In the Mood"; this is recognized as the earliest recording of a computer to play music as the CSIRAC music was never recorded. This recording can be heard at the Manchester University site.[9] Researchers at the University of Canterbury, Christchurch declicked and restored this recording in 2016 and the results may be heard on SoundCloud.[10][11][6]
Two further major 1950s developments were the origins of digital sound synthesis by computer, and of algorithmic composition programs beyond rote playback. Amongst other pioneers, the musical chemists Lejaren Hiller and Leonard Isaacson worked on a series of algorithmic composition experiments from 1956 to 1959, manifested in the 1957 premiere of the Illiac Suite for string quartet.[12] Max Mathews at Bell Laboratories developed the influential MUSIC I program and its descendants, further popularising computer music through a 1963 article in Science.[13] The first professional composer to work with digital synthesis was James Tenney, who created a series of digitally synthesized and/or algorithmically composed pieces at Bell Labs using Mathews' MUSIC III system, beginning with Analog #1 (Noise Study) (1961).[14][15] After Tenney left Bell Labs in 1964, he was replaced by composer Jean-Claude Risset, who conducted research on the synthesis of instrumental timbres and composed Computer Suite from Little Boy (1968).
Early computer-music programs typically did not run in real time, although the first experiments on CSIRAC and the Ferranti Mark 1 did operate in real time. From the late 1950s, with increasingly sophisticated programming, programs would run for hours or days, on multi million-dollar computers, to generate a few minutes of music.[16][17] One way around this was to use a 'hybrid system' of digital control of an analog synthesiser and early examples of this were Max Mathews' GROOVE system (1969) and also MUSYS by Peter Zinovieff (1969).
Until now partial use has been exploited for musical research into the substance and form of sound (convincing examples are those of Hiller and Isaacson in Urbana, Illinois, US; Iannis Xenakis in Paris and Pietro Grossi in Florence, Italy).[18]
In May 1967 the first experiments in computer music in Italy were carried out by the S 2F M studio in Florence[19] in collaboration with General Electric Information Systems Italy.[20] Olivetti-General Electric GE 115 (Olivetti S.p.A.) is used by Grossi as a performer: three programmes were prepared for these experiments. The programmes were written by Ferruccio Zulian [21] and used by Pietro Grossi for playing Bach, Paganini, and Webern works and for studying new sound structures.[22]

The programming computer for Yamaha's first FM synthesizer GS1. CCRMA, Stanford University.
John Chowning's work on FM synthesis from the 1960s to the 1970s allowed much more efficient digital synthesis,[23] eventually leading to the development of the affordable FM synthesis-based Yamaha DX7 digital synthesizer, released in 1983.[24]

Interesting sounds must have a fluidity and changeability that allows them to remain fresh to the ear. In computer music this subtle ingredient is bought at a high computational cost, both in terms of the number of items requiring detail in a score and in the amount of interpretive work the instruments must produce to realize this detail in sound.[25] 
In Japan[edit]
This article contains promotional content. Please help improve it by removing promotional language and inappropriate external links, and by adding encyclopedic text written from a neutral point of view. (February 2023) (Learn how and when to remove this message)
In Japan, experiments in computer music date back to 1962, when Keio University professor Sekine and Toshiba engineer Hayashi experimented with the TOSBAC [jp] computer. This resulted in a piece entitled TOSBAC Suite, influenced by the Illiac Suite. Later Japanese computer music compositions include a piece by Kenjiro Ezaki presented during Osaka Expo '70 and "Panoramic Sonore" (1974) by music critic Akimichi Takeda. Ezaki also published an article called "Contemporary Music and Computers" in 1970. Since then, Japanese research in computer music has largely been carried out for commercial purposes in popular music, though some of the more serious Japanese musicians used large computer systems such as the Fairlight in the 1970s.[26]
In the late 1970s these systems became commercialized, including systems like the Roland MC-8 Microcomposer, where a microprocessor-based system controls an analog synthesizer, released in 1978.[26]  In addition to the Yamaha DX7, the advent of inexpensive digital chips and microcomputers opened the door to real-time generation of computer music.[24] In the 1980s, Japanese personal computers such as the NEC PC-88 came installed with FM synthesis sound chips and featured audio programming languages such as Music Macro Language (MML) and MIDI interfaces, which were most often used to produce video game music, or chiptunes.[26] By the early 1990s, the performance of microprocessor-based computers reached the point that real-time generation of computer music using more general programs and algorithms became possible.[27]

Advances[edit]
Advances in computing power and software for manipulation of digital media have dramatically affected the way computer music is generated and performed. Current-generation micro-computers are powerful enough to perform very sophisticated audio synthesis using a wide variety of algorithms and approaches. Computer music systems and approaches are now ubiquitous, and so firmly embedded in the process of creating music that we hardly give them a second thought: computer-based synthesizers, digital mixers, and effects units have become so commonplace that use of digital rather than analog technology to create and record music is the norm, rather than the exception.[28]

Research[edit]
There is considerable activity in the field of computer music as researchers continue to pursue new and interesting computer-based synthesis, composition, and performance approaches. Throughout the world there are many organizations and institutions dedicated to the area of computer and electronic music study and research, including the CCRMA (Center of Computer Research in Music and Acoustic, Stanford, USA), ICMA (International Computer Music Association), C4DM (Centre for Digital Music), IRCAM, GRAME, SEAMUS (Society for Electro Acoustic Music in the United States), CEC (Canadian Electroacoustic Community), and a great number of institutions of higher learning around the world.

Music composed and performed by computers[edit]
Main article: Algorithmic composition
See also: Generative music, Evolutionary music, and Genetic algorithm
Later, composers such as Gottfried Michael Koenig and Iannis Xenakis had computers generate the sounds of the composition as well as the score. Koenig produced algorithmic composition programs which were a generalization of his own serial composition practice. This is not exactly similar to Xenakis' work as he used mathematical abstractions and examined how far he could explore these musically. Koenig's software translated the calculation of mathematical equations into codes which represented musical notation. This could be converted into musical notation by hand and then performed by human players. His programs Project 1 and Project 2 are examples of this kind of software. Later, he extended the same kind of principles into the realm of synthesis, enabling the computer to produce the sound directly. SSP is an example of a program which performs this kind of function. All of these programs were produced by Koenig at the Institute of Sonology in Utrecht in the 1970s.[29] In the 2000s, Andranik Tangian developed a computer algorithm to determine the time event structures for rhythmic canons and rhythmic fugues, which were then "manually" worked out into harmonic compositions Eine kleine Mathmusik I and Eine kleine Mathmusik II performed by computer;[30][31]
for scores and recordings see.[32]

Computer-generated scores for performance by human players[edit]
Computers have also been used in an attempt to imitate the music of great composers of the past, such as Mozart. A present exponent of this technique is David Cope, whose computer programs analyses works of other composers to produce new works in a similar style. Cope's best-known program is Emily Howell.[33][34][35]
Melomics, a research project from the University of Málaga (Spain), developed a computer composition cluster named Iamus, which composes complex, multi-instrument pieces for editing and performance. Since its inception, Iamus has composed a full album in 2012, also named Iamus, which New Scientist described as "the first major work composed by a computer and performed by a full orchestra".[36] The group has also developed an API for developers to utilize the technology, and makes its music available on its website.

Computer-aided algorithmic composition[edit]
Diagram illustrating the position of CAAC in relation to other generative music systems
Computer-aided algorithmic composition (CAAC, pronounced "sea-ack") is the implementation and use of algorithmic composition techniques in software. This label is derived from the combination of two labels, each too vague for continued use. The label computer-aided composition lacks the specificity of using generative algorithms. Music produced with notation or sequencing software could easily be considered computer-aided composition. The label algorithmic composition is likewise too broad, particularly in that it does not specify the use of a computer. The term computer-aided, rather than computer-assisted, is used in the same manner as computer-aided design.[37]

Machine improvisation[edit]
See also: Machine learning, Machine listening, Music and artificial intelligence, and Computer models of musical creativity
Machine improvisation uses computer algorithms to create improvisation on existing music materials. This is usually done by sophisticated recombination of musical phrases extracted from existing music, either live or pre-recorded. In order to achieve credible improvisation in particular style, machine improvisation uses machine learning and pattern matching algorithms to analyze existing musical examples. The resulting patterns are then used to create new variations "in the style" of the original music, developing a notion of stylistic re-injection.
This is different from other improvisation methods with computers that use algorithmic composition to generate new music without performing analysis of existing music examples.[38]

Statistical style modeling[edit]
Style modeling implies building a computational representation of the musical surface that captures important stylistic features from data. Statistical approaches are used to capture the redundancies in terms of pattern dictionaries or repetitions, which are later recombined to generate new musical data. Style mixing can be realized by analysis of a database containing multiple musical examples in different styles. Machine Improvisation builds upon a long musical tradition of statistical modeling that began with Hiller and Isaacson's Illiac Suite for String Quartet (1957) and Xenakis' uses of Markov chains and stochastic processes. Modern methods include the use of lossless data compression for incremental parsing, prediction suffix tree, string searching and more.[39] Style mixing is possible by blending models derived from several musical sources, with the first style mixing done by S. Dubnov in a piece NTrope Suite using Jensen-Shannon joint source model.[40] Later the use of factor oracle algorithm (basically a factor oracle is a finite state automaton constructed in linear time and space in an incremental fashion)[41] was adopted for music by Assayag and Dubnov[42] and became the basis for several systems that use stylistic re-injection.[43]

Implementations[edit]
The first implementation of statistical style modeling was the LZify method in Open Music,[44] followed by the Continuator system that implemented interactive machine improvisation that interpreted the LZ incremental parsing in terms of Markov models and used it for real time style modeling[45] developed by François Pachet at Sony CSL Paris in 2002.[46][47] Matlab implementation of the Factor Oracle machine improvisation can be found as part of Computer Audition toolbox. There is also an NTCC implementation of the Factor Oracle machine improvisation.[48]
OMax is a software environment developed in IRCAM. OMax uses OpenMusic and Max. It is based on researches on stylistic modeling carried out by Gerard Assayag and Shlomo Dubnov and on researches on improvisation with the computer by G. Assayag, M. Chemillier and G. Bloch (a.k.a. the OMax Brothers) in the Ircam Music Representations group.[49]
One of the problems in modeling audio signals with factor oracle is the symbolization of features from continuous values to a discrete alphabet. This problem was solved in the Variable Markov Oracle (VMO) available as python implementation,[50] using an information rate criteria for finding the optimal or most informative representation.[51]

Use of artificial intelligence[edit]
The use of artificial intelligence to generate new melodies,[52] cover pre-existing music,[53] and clone artists' voices, is a recent phenomenon that has been reported to disrupt the music industry.[54]

Live coding[edit]
Main article: Live coding
Live coding[55] (sometimes known as 'interactive programming', 'on-the-fly programming',[56] 'just in time programming') is the name given to the process of writing software in real time as part of a performance. Recently it has been explored as a more rigorous alternative to laptop musicians who, live coders often feel, lack the charisma and pizzazz of musicians performing live.[57]

See also[edit]

Music portal

Acousmatic music
Adaptive music
Csound
Digital audio workstation
Digital synthesizer
Fast Fourier transform
Human–computer interaction
Laptronica
List of music software
Module file
Music information retrieval
Music notation software
Music sequencer
New Interfaces for Musical Expression
Physical modeling synthesis
Programming (music)
Sampling (music)
Sound and music computing
Tracker
Vaporwave
Vocaloid

References[edit]


^ Curtis Roads,The Computer Music Tutorial, Boston: MIT Press, Introduction

^ Andrew J. Nelson, The Sound of Innovation: Stanford and the Computer Music Revolution, Boston: MIT Press, Introduction

^ "Algorhythmic Listening 1949–1962 Auditory Practices of Early Mainframe Computing". AISB/IACAP World Congress 2012. Archived from the original on 7 November 2017. Retrieved 18 October 2017.

^ Doornbusch, Paul (9 July 2017). "MuSA 2017 – Early Computer Music Experiments in Australia, England and the USA". MuSA Conference. Retrieved 18 October 2017.

^ Doornbusch, Paul (2017). "Early Computer Music Experiments in Australia and England". Organised Sound. 22 (2). Cambridge University Press: 297–307 [11]. doi:10.1017/S1355771817000206.

^ a b Fildes, Jonathan (17 June 2008). "Oldest computer music unveiled". BBC News Online. Retrieved 18 June 2008.

^ Doornbusch, Paul (March 2004). "Computer Sound Synthesis in 1951: The Music of CSIRAC". Computer Music Journal. 28 (1): 11–12. doi:10.1162/014892604322970616. S2CID 10593824.

^ Doornbusch, Paul. "The Music of CSIRAC". Melbourne School of Engineering, Department of Computer Science and Software Engineering. Archived from the original on 18 January 2012.

^ "Media (Digital 60)". curation.cs.manchester.ac.uk. Retrieved 15 December 2023.

^ "First recording of computer-generated music – created by Alan Turing – restored". The Guardian. 26 September 2016. Retrieved 28 August 2017.

^ "Restoring the first recording of computer music – Sound and vision blog". British Library. 13 September 2016. Retrieved 28 August 2017.

^ Lejaren Hiller and Leonard Isaacson, Experimental Music: Composition with an Electronic Computer (New York: McGraw-Hill, 1959; reprinted Westport, Connecticut: Greenwood Press, 1979). ISBN 0-313-22158-8. [page needed]

^ Bogdanov, Vladimir (2001). All Music Guide to Electronica: The Definitive Guide to Electronic Music. Backbeat Books. p. 320. ISBN 978-0-87930-628-1. Retrieved 4 December 2013.

^ Tenney, James. (1964) 2015. “Computer Music Experiences, 1961–1964.” In From Scratch: Writings in Music Theory. Edited by Larry Polansky, Lauren Pratt, Robert Wannamaker, and Michael Winter. Urbana: University of Illinois Press. 97–127.

^ Wannamaker, Robert, The Music of James Tenney, Volume 1: Contexts and Paradigms (University of Illinois Press, 2021), 48–82.

^ Cattermole, Tannith (9 May 2011). "Farseeing inventor pioneered computer music". Gizmag. Retrieved 28 October 2011. In 1957 the MUSIC program allowed an IBM 704 mainframe computer to play a 17-second composition by Mathews. Back then computers were ponderous, so synthesis would take an hour.

^ Mathews, Max (1 November 1963). "The Digital Computer as a Musical Instrument". Science. 142 (3592): 553–557. Bibcode:1963Sci...142..553M. doi:10.1126/science.142.3592.553. PMID 17738556. The generation of sound signals requires very high sampling rates.... A high speed machine such as the I.B.M. 7090 ... can compute only about 5000 numbers per second ... when generating a reasonably complex sound.

^ Bonomini, Mario; Zammit, Victor; Pusey, Charles D.; De Vecchi, Amedeo; Arduini, Arduino (March 2011). "Pharmacological use of l-carnitine in uremic anemia: Has its full potential been exploited?☆". Pharmacological Research. 63 (3): 157–164. doi:10.1016/j.phrs.2010.11.006. ISSN 1043-6618. PMID 21138768.

^ Parolini, Giuditta (2016). "Pietro Grossi's Experience in Electronic and Computer Music by Giuditta Parolini". University of Leeds. doi:10.5518/160/27. Archived from the original on 18 June 2021. Retrieved 21 March 2021.

^ Gaburo, Kenneth (Spring 1985). "The Deterioration of an Ideal, Ideally Deteriorized: Reflections on Pietro Grossi's 'Paganini AI Computer'". Computer Music Journal. 9 (1): 39–44. JSTOR 4617921.

^ "Music without Musicians but with Scientists Technicians and Computer Companies". 2019.

^ Giomi, Francesco (1995). "The Work of Italian Artist Pietro Grossi: From Early Electronic Music to Computer Art". Leonardo. 28 (1): 35–39. doi:10.2307/1576152. JSTOR 1576152. S2CID 191383265.

^ Dean, Roger T. (2009). The Oxford Handbook of Computer Music. Oxford University Press. p. 20. ISBN 978-0-19-533161-5.

^ a b Dean 2009, p. 1

^ Loy, D. Gareth (1992). "Notes on the implementation of MUSBOX...". In Roads, Curtis (ed.). The Music Machine: Selected Readings from 'Computer Music Journal'. MIT Press. p. 344. ISBN 978-0-262-68078-3.

^ a b c Shimazu, Takehito (1994). "The History of Electronic and Computer Music in Japan: Significant Composers and Their Works". Leonardo Music Journal. 4. MIT Press: 102–106 [104]. doi:10.2307/1513190. JSTOR 1513190. S2CID 193084745. Retrieved 9 July 2012.[permanent dead link]

^ Dean 2009, pp. 4–5: "... by the 90s ... digital sound manipulation (using MSP or many other platforms) became widespread, fluent and stable."

^ Doornbusch, Paul. "3: Early Hardware and Early Ideas in Computer Music: Their Development and Their Current Forms". In Dean (2009), pp. 44–80. doi:10.1093/oxfordhb/9780199792030.013.0003

^ Berg, Paul (1996). "Abstracting the future: The Search for Musical Constructs". Computer Music Journal. 20 (3). MIT Press: 24–27 [11]. doi:10.2307/3680818. JSTOR 3680818.

^ Tangian, Andranik (2003). "Constructing rhythmic canons" (PDF). Perspectives of New Music. 41 (2): 64–92. Archived from the original (PDF) on 24 January 2021. Retrieved 16 January 2021.

^ Tangian, Andranik (2010). "Constructing rhythmic fugues (unpublished addendum to Constructing rhythmic canons)". IRCAM, Seminaire MaMuX, 9 February 2002, Mosaïques et pavages dans la musique (PDF). Archived from the original (PDF) on 22 January 2021. Retrieved 16 January 2021.

^ Tangian, Andranik (2002–2003). "Eine kleine Mathmusik I and II". IRCAM, Seminaire MaMuX, 9 February 2002, Mosaïques et pavages dans la musique. Archived from the original on 21 January 2021. Retrieved 16 January 2021.

^ Leach, Ben (22 October 2009). "Emily Howell: the computer program that composes classical music". The Daily Telegraph. Retrieved 6 October 2017.

^ Cheng, Jacqui (30 September 2009). "Virtual Composer Makes Beautiful Music and Stirs Controversy". Ars Technica.

^ Ball, Philip (1 July 2012). "Iamus, classical music's computer composer, live from Malaga". The Guardian. Archived from the original on 25 October 2013. Retrieved 15 November 2021.

^ "Computer composer honours Turing's centenary". New Scientist. 5 July 2012.

^ Christopher Ariza: An Open Design for Computer-Aided Algorithmic Music Composition, Universal-Publishers Boca Raton, Florida, 2005, p. 5

^ Mauricio Toro, Carlos Agon, Camilo Rueda, Gerard Assayag. "GELISP: A Framework to Represent Musical Constraint Satisfaction Problems and Search Strategies", Journal of Theoretical and Applied Information Technology 86, no. 2 (2016): 327–331.

^ Shlomo Dubnov, Gérard Assayag, Olivier Lartillot, Gill Bejerano, "Using Machine-Learning Methods for Musical Style Modeling", Computers, 36 (10), pp. 73–80, October 2003. doi:10.1109/MC.2003.1236474

^ Dubnov, S. (1999). "Stylistic randomness: About composing NTrope Suite." Organised Sound, 4(2), 87–92. doi:10.1017/S1355771899002046

^ Jan Pavelka; Gerard Tel; Miroslav Bartosek, eds. (1999). Factor oracle: a new structure for pattern matching; Proceedings of SOFSEM'99; Theory and Practice of Informatics. Springer-Verlag, Berlin. pp. 291–306. ISBN 978-3-540-66694-3. Retrieved 4 December 2013. Lecture Notes in Computer Science 1725

^ "Using factor oracles for machine improvisation",
G. Assayag, S. Dubnov, (September 2004) Soft Computing 8 (9), 604–610 doi:10.1007/s00500-004-0385-4

^ "Memex and composer duets: computer-aided composition using style mixing", S. Dubnov, G. Assayag, Open Music Composers Book 2, 53–66

^ G. Assayag, S. Dubnov, O. Delerue, "Guessing the Composer's Mind : Applying Universal Prediction to Musical Style", In Proceedings of International Computer Music Conference, Beijing, 1999.

^ ":: Continuator". Archived from the original on 1 November 2014. Retrieved 19 May 2014.

^ Pachet, F., The Continuator: Musical Interaction with Style Archived 14 April 2012 at the Wayback Machine. In ICMA, editor, Proceedings of ICMC, pages 211–218, Göteborg, Sweden, September 2002. ICMA.

^ Pachet, F. Playing with Virtual Musicians: the Continuator in practice Archived 14 April 2012 at the Wayback Machine. IEEE MultiMedia,9(3):77–82 2002.

^ 
M. Toro, C. Rueda, C. Agón, G. Assayag. "NTCCRT: A concurrent constraint framework for soft-real time music interaction." Journal of Theoretical & Applied Information Technology, vol. 82, issue 1, pp. 184–193. 2015

^ "The OMax Project Page". omax.ircam.fr. Retrieved 2 February 2018.

^ Guided music synthesis with variable markov oracle
C Wang, S Dubnov, Tenth Artificial Intelligence and Interactive Digital Entertainment Conference, 2014

^ S Dubnov, G Assayag, A Cont, "Audio oracle analysis of musical information rate", IEEE Fifth International Conference on Semantic Computing, 567–557, 2011 doi:10.1109/ICSC.2011.106

^ "Turn ideas into music with MusicLM". Google. 10 May 2023. Retrieved 22 September 2023.

^ "Pick a voice, any voice: Voicemod unleashes "AI Humans" collection of real-time AI voice changers". Tech.eu. 21 June 2023. Retrieved 22 September 2023.

^ "'Regulate it before we're all finished': Musicians react to AI songs flooding the internet". Sky News. Retrieved 22 September 2023.

^ Collins, N.; McLean, A.; Rohrhuber, J.; Ward, A. (2004). "Live coding in laptop performance". Organised Sound. 8 (3): 321–330. doi:10.1017/S135577180300030X. S2CID 56413136.

^ Wang G. & Cook P. (2004) "On-the-fly Programming: Using Code as an Expressive Musical Instrument", In Proceedings of the 2004 International Conference on New Interfaces for Musical Expression (NIME) (New York: NIME, 2004).

^ Collins, Nick (2003). "Generative Music and Laptop Performance". Contemporary Music Review. 22 (4): 67–79. doi:10.1080/0749446032000156919. S2CID 62735944.


Further reading[edit]

Ariza, C. 2005. "Navigating the Landscape of Computer-Aided Algorithmic Composition Systems: A Definition, Seven Descriptors, and a Lexicon of Systems and Research." In Proceedings of the International Computer Music Conference. San Francisco: International Computer Music Association. 765–772.
Ariza, C. 2005. An Open Design for Computer-Aided Algorithmic Music Composition: athenaCL. PhD Dissertation, New York University.
Boulanger, Richard, ed. (6 March 2000). The Csound Book: Perspectives in Software Synthesis, Sound Design, Signal Processing, and Programming. MIT Press. p. 740. ISBN 978-0-262-52261-8. Archived from the original on 2 January 2010. Retrieved 3 October 2009.
Chadabe, Joel. 1997. Electric Sound: The Past and Promise of Electronic Music. Upper Saddle River, New Jersey: Prentice Hall.
Chowning, John. 1973. "The Synthesis of Complex Audio Spectra by Means of Frequency Modulation". Journal of the Audio Engineering Society 21, no. 7:526–534.
Collins, Nick (2009). Introduction to Computer Music. Chichester: Wiley. ISBN 978-0-470-71455-3.
Dodge, Charles; Jerse (1997). Computer Music: Synthesis, Composition and Performance. Thomas A. (2nd ed.). New York: Schirmer Books. p. 453. ISBN 978-0-02-864682-4.
Doornbusch, P. 2015. "A Chronology / History of Electronic and Computer Music and Related Events 1906–2015 Archived 18 August 2020 at the Wayback Machine"
Heifetz, Robin (1989). On the Wires of Our Nerves. Lewisburg, Pennsylvania: Bucknell University Press. ISBN 978-0-8387-5155-8.
Dorien Herremans; Ching-Hua Chuan; Elaine Chew (November 2017). "A Functional Taxonomy of Music Generation Systems". ACM Computing Surveys. 50 (5): 69:1–30. arXiv:1812.04186. doi:10.1145/3108242. S2CID 3483927.
Manning, Peter (2004). Electronic and Computer Music (revised and expanded ed.). Oxford Oxfordshire: Oxford University Press. ISBN 978-0-19-517085-6.
Perry, Mark, and Thomas Margoni. 2010. "From Music Tracks to Google Maps: Who Owns Computer-Generated Works?". Computer Law & Security Review 26: 621–629.
Roads, Curtis (1994). The Computer Music Tutorial. Cambridge: MIT Press. ISBN 978-0-262-68082-0.
Supper, Martin (2001). "A Few Remarks on Algorithmic Composition". Computer Music Journal. 25: 48–53. doi:10.1162/014892601300126106. S2CID 21260852.
Xenakis, Iannis (2001). Formalized Music: Thought and Mathematics in Composition. Harmonologia Series No. 6. Hillsdale, New York: Pendragon. ISBN 978-1-57647-079-4.

vteComputer musicPeople
Marc Battier
Richard Boulanger
David Cope
John Chowning
Giuseppe di Giugno
Charles Dodge
Gottfried Michael Koenig
Paul Lansky
Max Mathews
Gérard Pape
Miller Puckette
Roger Reynolds
Jean-Claude Risset
Curtis Roads
Laurie Spiegel
The Hub
Trimpin
Barry Vercoe
Iannis Xenakis

Programs andinstruments
ChucK
Composers Desktop Project
Csound
FAUST
HMSL
Kyma
Laptop orchestra
Max/MSP
MIDI controller
Music Mouse
Pure Data
MUSIC-N
Radiodrum
Riffusion
Sonic Pi
SuperCollider
TidalCycles
UPIC
Places
Bell Labs
CCRMA
CEMAMu
Computer Music Center at Columbia
Experimental Music Studios
ICEM
ICMA
IRCAM
Center for New Music and Audio Technologies
Princeton Sound Lab
Oberlin TIMARA Labs
IEM
Techniques
Algorithmic composition
Artificial intelligence
Sound synthesis
Digital synthesis
Compositions
Illiac Suite
Mortuos Plango, Vivos Voco

vteDigital artToolsHardware
Computer
CGI
2D graphics
2.5D
3D graphics
Xerox
3D printer
Software
Graphic art software
Fractal-generating software
Animation software
Forms
Art game
Artificial intelligence art
ASCII art
Computer art scene
Computer music
Crypto art
Cyberarts
Digital illustration
Digital imaging
Digital painting
Digital photography
Digital poetry
Digital architecture
Electronic music
Evolutionary art
Fractal art
Generative art
Generative artificial intelligence
Generative music
GIF art
Glitch art
Immersion
Interactive art
Internet art
Motion graphics
Music visualization
Photograph manipulation
Pixel art
Render art
Software art
Systems art
Texture mapping
Virtual art
Notableartists
Refik Anadol
Cory Arcangel
Sougwen Chung
Harold Cohen
Char Davies
Stephanie Dinkins
Jake Elwes
David Em
Desmond Paul Henry
Mario Klingemann
Lynn Hershman Leeson
Zachary Lieberman
Margot Lovejoy
Mauro Martino
Eric Millikin
Hamid Naderi Yeganeh
Trevor Paglen
Casey Reas
Anna Ridler
Ben Rubin (artist)
Karl Sims
Camille Utterback
Pindar Van Arman
Notableartworks
Edmond de Belamy
Barnsley fern
Jesus Dress Up
Listening Post (artwork)
Remember To Rise
Organizations,conferences
Artfutura
Artmedia
Austin Museum of Digital Art
Computer Arts Society
EVA Conferences
Los Angeles Center for Digital Art
Lumen Prize
onedotzero
SIGGRAPH
V&A Digital Futures

vteElectronic-based music stylesElectronic dance music · ElectronicaGenres bydecade of originEarly
Amplified guitar
Electric blues
Hawaiian guitar
Jùjú
Rock
List of rock genres
Western swing
Biomusic
Computer music
Electroacoustic music
Acousmatic music
Musique concrète
Tape music
Elektronische Musik
Live electronics
Noise
Sound system (Jamaican)
Space age pop
1960s
Ambient
Drone
Dub
Electronic rock
Jazz-funk
Krautrock
New-age music
Progressive rock
Psychedelic music
Psychedelic funk
Psychedelic rock
Sampledelia
Space music
Space rock
1970s
Afro/cosmic music
Space disco
Boogie
Chiptune
Dancehall
Electropunk
Eurodisco
Hi-NRG
Industrial
Industrial rock
Japanoise
New wave
Cold wave
Dark wave
Minimal wave
Post-disco
Dance-punk
Dance-rock
Italo disco
Reggae fusion
Synth-pop
1980s
Alternative dance
Baggy
Ambient pop
Breakbeat
Florida breaks
Contemporary R&B
New jack swing
Dark ambient
Dubtronica
Electro
Freestyle
Electro-industrial
Electronic body music
Electropop
Ethnic electronica
Funk carioca
Kuduro
Kwaito
Tecnocumbia
Turbo-folk
Eurobeat
Eurodance
Grebo
House
Acid
Ambient
Balearic beat
Chicago
Deep
Garage
Funky
Italo
Jersey sound
Hip house
Latin
Tech
Tribal
Industrial hip hop
Industrial metal
Martial industrial
Miami bass
New beat
Power electronics
Ragga
Sophisti-pop
Synth-metal
Techno
Acid techno
Bleep techno
Detroit techno
Tracker music
1990s
Ambient dub
Ambient techno
Asian underground
Baltimore club
Bhangragga
Big beat
Bitpop
Breakbeat hardcore
Darkcore
Happy hardcore
Toytown techno
Broken beat
Changa tuki
Chopped and screwed
Dark electro
Denpa song
Digital hardcore
Disco polo
Diva house
Hardbag
Downtempo
Bristol sound
Psybient
Trip hop
Drum and bass
Heavy
Darkstep
Hardstep
Neurofunk
Techstep
Jungle
Ragga jungle
Light
Atmospheric
Intelligent
Jazzstep
Liquid funk
Dub techno
Dungeon synth
Electroclash
Folktronica
French house
Nu disco
Funkot
Futurepop
Ghetto house
Footwork
Ghettotech
Glitch
Hardcore
Belgian techno
Bouncy techno
Breakcore
Free tekno
Frenchcore
Gabber
Hardstyle
Lento violento
J-core
Mákina
Speedcore
Harsh noise wall
Illbient
Indietronica
Industrial techno
Intelligent dance music
Drill 'n' bass
Kidandali
Livetronica
Merenhouse
Microhouse
Minimal techno
Schaffel
Nu jazz
Electro swing
Nu metal
Nu skool breaks
Post-rock
Power noise
Progressive house
Psydub
Reggaeton
Dembow
Trance
Acid
Balearic
Dream
Goa
Hands Up
Hard
Progressive
Psy
Tech
Uplifting
Vocal
UK garage
2-step
Breakstep
Speed garage
UK hard house
Hardbass
Hard NRG
2000s
Afrobeats
Bassline
Budots
Christian electronic dance music
Cloud rap
Coupé-décalé
Crunk
Crunkcore
Dancehall pop
Dubstep
Reggaestep
Electro house
Complextro
Dutch house
Fidget house
Electronicore
Future garage
Grime
Grindie
Hauntology
Hypnagogic pop
Chillwave
Glo-fi
Jersey club
Juke house
Jumpstyle
Mainstream hardcore
Nightcore
Nintendocore
Nortec
Phonk
Post-punk revival
New rave
Rabòday
Reductionism
Lowercase
Onkyokei
Russ music
Sambass
Shangaan electro
Skweee
Synthwave
Sovietwave
Tecno brega
Trival
UK bass
UK funky
Funkstep
Vocaloid music
Witch house
Wonky
Wonky pop
2010s
Afroswing
Algorave
Amapiano
Azonto
Big room house
Black MIDI
Brazilian bass
Bro-country
Deconstructed club
Dreampunk
Funktronica
Future bass
Kawaii future bass
Future house
Future soul
Hyperpop
Gqom
Jungle terror
Lofi hip hop
Mahraganat
Melbourne bounce
Moombahton
Moombahcore
Moombahsoul
Mumble rap
Outsider house
Plugg
Post-dubstep
Brostep
Riddim
Rara tech
Seapunk
Shamstep
EDM trap
Tropical house
Vaporwave
Hardvapour
Mallsoft
Slowed and reverb
Wave
Hardwave
Weird SoundCloud
2020s
Drift phonk
Hyperpop microgenres
Plugg microgenres
Rage
Other topicsCulture
Beat drop
Club drug
Disc jockey
DJ mix
Sound system
Turntablism
Mashup
Microgenre
Nightclub
Rave
Acid house party
Circuit party
Doof
EDM festival
Free party
Teknival
Remix
Sampling
Plunderphonics
Rare groove
Riddim
Street dance
House dance
Rave dance
Genres
Bass music
Celtic fusion
Chill-out music
Lounge music
Disco
Doujin music
Lo-fi music
Madchester
Progressive electronica
Rave music
Reggae
Sound collage
Video game music
Adaptive music
Tools
Bass
Data sonification
Digital audio workstation
Drum break
List
Electronic musical instrument
Drum machine
Sampler
Synthesizer
Electronics in rock music
MIDI
Music technology (electronic and digital)
Recording studio as an instrument

Authority control databases: National GermanyUnited StatesJapanCzech RepublicIsrael




Retrieved from "https://en.wikipedia.org/w/index.php?title=Computer_music&oldid=1259130059"
Categories: Computer musicComputer music softwareImprovised musical instrumentsHidden categories: Wikipedia articles needing page number citations from November 2010All articles with dead external linksArticles with dead external links from May 2023Articles with permanently dead external linksWebarchive template wayback linksArticles with short descriptionShort description matches WikidataUse dmy dates from April 2020Articles with a promotional tone from February 2023All articles with a promotional tone






 This page was last edited on 23 November 2024, at 14:56 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







Computer music




























23 languages


Add topic
















