https://en.wikipedia.org/wiki/Field-programmable_object_array




Field-programmable object array - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
Motivation and history








2
Architecture








3
Applications








4
Development on FPOA








5
Present status








6
References


















Toggle the table of contents







Field-programmable object array



Add languages





Add links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia


Class of programmable logic device designed to be modified or programmed after manufacturing
A field-programmable object array (FPOA) is a class of programmable logic devices designed to be modified or programmed after manufacturing. They are designed to bridge the gap between ASIC and FPGA. They contain a grid of programmable silicon objects. Arrix range of FPOA contained three types of silicon objects: arithmetic logic units (ALUs), register files (RFs) and multiply-and-accumulate units (MACs). Both the objects and interconnects are programmable.


Motivation and history[edit]
The device was intended to bridge the gap between field-programmable gate arrays (FPGAs) and application-specific integrated circuits (ASICs). The design goal was to combine the programmability of FPGAs and the performance of ASICs. FPGAs, although programmable, lack performance; they may only be clocked to few hundreds of megahertz and most FPGAs operated below 100 MHz.[when?]  FPGAs did not offer deterministic timing and the maximum operating frequency depends on the design. ASICs offered good performance, but they could not be modified and they were very costly. The FPOA had a programmable architecture, deterministic timing, and gigahertz performance. The FPOA was designed by Douglas Pihl who had this idea when working on a DARPA funded project.[1] He founded MathStar in 1997 to manufacture FPOAs and the idea was patented in 2004. The first FPOA prototypes were made in 2005 and first batch of FPOA chips were fabricated in 2006.[2]

Architecture[edit]
Simplified illustration of FPOA architecture. The area between the rectangles forms peripheral circuitry and the oval around the object interface it to the rest of FPOA.
FPOAs have a core grid of silicon objects or core objects. These objects are connected through a synchronous interconnect. Each core object also has a supporting structures for clock synchronization, BIST and the like. The core is surrounded by  peripheral circuitry that contains memory and I/O. An interface circuitry connects the objects to rest of FPOA. Exact number of each type of object and its arrangement are specific to a given family. There are two types of communication: nearest member and "party-line". Nearest member is used to connect a core to nearest core object and party line is used to connect remote objects. There are 8 nearest neighbor interconnects per object and offers transmission speed on one object hop per clock cycle. There are 10 party line interconnect per object that offers transmission speed of four object hops per clock cycle.[3]

Applications[edit]
FPOAs may be used almost anywhere an FPGA is used, broadly in all hardware acceleration tasks including digital signal processing, medical imaging, computer vision, speech recognition, cryptography, bioinformatics, computer hardware emulation, and aerospace. Since FPOAs are built around fast and optimized silicon objects, they offer higher performance in flat field error correction, fast Fourier transform computation, medical imaging, machine vision, image encoding and decoding, video encoding and decoding and artificial intelligence acceleration to name a few.[4]

Development on FPOA[edit]
In FPOA we work at silicon object level a higher level than the gate level used in FPGA. This eases the learning curve and also speeds up development. Programming is done in System C. The Arrix family released in 2006 was supported by FPOA design software, which enabled designers to create, verify, program and debug their algorithms on the devices. Summit Design's Visual Elite tool was used for behavioural simulation. MathStar's COAST (COnnection and ASsignment Tool) offered a graphical environment for floor-planning and placement it compiled to an intermediate code that maps to hardware resources. The Object compiler generated the file to be loaded into the FPGA.[5] In 2007 MathStar struck a partnership with mentor graphics and subsequent release use Visual Elite editor from Mentor Graphics for behavioural simulation and functional verification.[6] FPOAs also offered IP core library IP partners included professionals in the video market as well as machine vision market.

Present status[edit]
MathStar the producer of FPOAs never posted a profit and the company decided to shut down production in May 2008.[7] MathStar was merged into Sajan Inc. in 2010 and Sajan thus acquired MathStar's patent including that of FPOAs. In November 2011, Sajan sold several of MathStar's patent including some on FPOAs to OLK Grun GmbH.[8]


Electronics portal
References[edit]


^ 
"Computational vision: Testing MathStar’s field-programmable object arrays". EDN Networks, August 14, 2013.

^ "Radiation Hardened FPOA for space processing" (PDF). MAFA 2007. Retrieved August 14, 2013.

^ "Patent application 0070247189". US Patent and Trademark Office. Archived from the original on August 17, 2013. Retrieved August 14, 2013.

^ "Computational vision: Testing MathStar's field-programmable object arrays". EDN Networks. Retrieved August 14, 2013.

^ "Device Spotlight:MathStar Arrix FPOA". nuvation. Archived from the original on June 13, 2012. Retrieved August 14, 2013.

^ "Mentor, MathStar partner on FPOA design tools". EE Times. Retrieved August 14, 2013.

^ MathStar seems to have gone dark, StarTribute, archived from the original on August 15, 2013, retrieved August 14, 2013

^ 
"Sajan announces sale of former MathStar intellectual-property". Sajan. Archived from the original on March 19, 2012. Retrieved August 14, 2013.


vteDigital electronicsComponents
Transistor
Resistor
Inductor
Capacitor
Printed electronics
Printed circuit board
Electronic circuit
Flip-flop
Memory cell
Combinational logic
Sequential logic
Logic gate
Boolean circuit
Integrated circuit (IC)
Hybrid integrated circuit (HIC)
Mixed-signal integrated circuit
Three-dimensional integrated circuit (3D IC)
Emitter-coupled logic (ECL)
Erasable programmable logic device (EPLD)
Macrocell array
Programmable logic array (PLA)
Programmable logic device (PLD)
Programmable Array Logic (PAL)
Generic Array Logic (GAL)
Complex programmable logic device (CPLD)
Field-programmable gate array (FPGA)
Field-programmable object array (FPOA)
Application-specific integrated circuit (ASIC)
Tensor Processing Unit (TPU)
Theory
Digital signal
Boolean algebra
Logic synthesis
Logic in computer science
Computer architecture
Digital signal
Digital signal processing
Circuit minimization
Switching circuit theory
Gate equivalent
Design
Logic synthesis
Place and route
Placement
Routing
Transaction-level modeling
Register-transfer level
Hardware description language
High-level synthesis
Formal equivalence checking
Synchronous logic
Asynchronous logic
Finite-state machine
Hierarchical state machine
Applications
Computer hardware
Hardware acceleration
Digital audio
radio
Digital photography
Digital telephone
Digital video
cinematography
television
Electronic literature
Design issues
Metastability
Runt pulse





Retrieved from "https://en.wikipedia.org/w/index.php?title=Field-programmable_object_array&oldid=1264973189"
Categories: Gate arraysIntegrated circuitsHidden categories: Articles with short descriptionShort description matches WikidataAll articles with vague or ambiguous timeVague or ambiguous time from October 2018






 This page was last edited on 24 December 2024, at 12:21 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







Field-programmable object array




























Add languages


Add topic
















