https://en.wikipedia.org/wiki/Combinational_logic




Combinational logic - Wikipedia




































Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
Representation








2
Logic formula minimization








3
See also








4
References








5
External links


















Toggle the table of contents







Combinational logic



27 languages




AfrikaansالعربيةБеларускаяБългарскиCatalàČeštinaDanskDeutschEspañolEuskaraفارسیFrançais한국어हिन्दीIdoItalianoעבריתMagyarNederlandsOʻzbekcha / ўзбекчаPolskiPortuguêsРусскийСрпски / srpskiไทยУкраїнська中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia


Type of digital logic implemented by Boolean circuits
Not to be confused with combinatory logic, a topic in mathematical logic.

Classes of automata (Clicking on each layer gets an article on that subject)
In automata theory, combinational logic (also referred to as time-independent logic[1]) is a type of digital logic that is implemented by Boolean circuits, where the output is a pure function of the present input only. This is in contrast to sequential logic, in which the output depends not only on the present input but also on the history of the input. In other words, sequential logic has memory while combinational logic does not.
Combinational logic is used in computer circuits to perform Boolean algebra on input signals and on stored data. Practical computer circuits normally contain a mixture of combinational and sequential logic. For example, the part of an arithmetic logic unit, or ALU, that does mathematical calculations is constructed using combinational logic. Other circuits used in computers, such as half adders, full adders, half subtractors, full subtractors, multiplexers, demultiplexers, encoders and decoders are also made by using combinational logic.
Practical design of combinational logic systems may require consideration of the finite time required for practical logical elements to react to changes in their inputs. Where an output is the result of the combination of several different paths with differing numbers of switching elements, the output may momentarily change state before settling at the final state, as the changes propagate along different paths. [2]


Representation[edit]
Combinational logic is used to build circuits that produce specified outputs from certain inputs. The construction of combinational logic is generally done using one of two methods: a sum of products, or a product of sums. Consider the following truth table:



A
B
C
Result
Logical equivalent


F
F
F
F




¬
A
∧
¬
B
∧
¬
C


{\displaystyle \neg A\wedge \neg B\wedge \neg C}




F
F
T
F




¬
A
∧
¬
B
∧
C


{\displaystyle \neg A\wedge \neg B\wedge C}




F
T
F
F




¬
A
∧
B
∧
¬
C


{\displaystyle \neg A\wedge B\wedge \neg C}




F
T
T
F




¬
A
∧
B
∧
C


{\displaystyle \neg A\wedge B\wedge C}




T
F
F
T




A
∧
¬
B
∧
¬
C


{\displaystyle A\wedge \neg B\wedge \neg C}




T
F
T
F




A
∧
¬
B
∧
C


{\displaystyle A\wedge \neg B\wedge C}




T
T
F
F




A
∧
B
∧
¬
C


{\displaystyle A\wedge B\wedge \neg C}




T
T
T
T




A
∧
B
∧
C


{\displaystyle A\wedge B\wedge C}




Using sum of products, all logical statements which yield true results are summed, giving the result:





(
A
∧
¬
B
∧
¬
C
)
∨
(
A
∧
B
∧
C
)



{\displaystyle (A\wedge \neg B\wedge \neg C)\vee (A\wedge B\wedge C)\,}


Using Boolean algebra, the result simplifies to the following equivalent of the truth table:





A
∧
(
(
¬
B
∧
¬
C
)
∨
(
B
∧
C
)
)



{\displaystyle A\wedge ((\neg B\wedge \neg C)\vee (B\wedge C))\,}


Logic formula minimization[edit]
Minimization (simplification) of combinational logic formulas is done using the following rules based on the laws of Boolean algebra:









(
A
∨
B
)
∧
(
A
∨
C
)



=
A
∨
(
B
∧
C
)




(
A
∧
B
)
∨
(
A
∧
C
)



=
A
∧
(
B
∨
C
)






{\displaystyle {\begin{aligned}(A\vee B)\wedge (A\vee C)&=A\vee (B\wedge C)\\(A\wedge B)\vee (A\wedge C)&=A\wedge (B\vee C)\end{aligned}}}










A
∨
(
A
∧
B
)



=
A




A
∧
(
A
∨
B
)



=
A






{\displaystyle {\begin{aligned}A\vee (A\wedge B)&=A\\A\wedge (A\vee B)&=A\end{aligned}}}










A
∨
(
¬
A
∧
B
)



=
A
∨
B




A
∧
(
¬
A
∨
B
)



=
A
∧
B






{\displaystyle {\begin{aligned}A\vee (\lnot A\wedge B)&=A\vee B\\A\wedge (\lnot A\vee B)&=A\wedge B\end{aligned}}}










(
A
∨
B
)
∧
(
¬
A
∨
B
)



=
B




(
A
∧
B
)
∨
(
¬
A
∧
B
)



=
B






{\displaystyle {\begin{aligned}(A\vee B)\wedge (\lnot A\vee B)&=B\\(A\wedge B)\vee (\lnot A\wedge B)&=B\end{aligned}}}










(
A
∧
B
)
∨
(
¬
A
∧
C
)
∨
(
B
∧
C
)



=
(
A
∧
B
)
∨
(
¬
A
∧
C
)




(
A
∨
B
)
∧
(
¬
A
∨
C
)
∧
(
B
∨
C
)



=
(
A
∨
B
)
∧
(
¬
A
∨
C
)






{\displaystyle {\begin{aligned}(A\wedge B)\vee (\lnot A\wedge C)\vee (B\wedge C)&=(A\wedge B)\vee (\lnot A\wedge C)\\(A\vee B)\wedge (\lnot A\vee C)\wedge (B\vee C)&=(A\vee B)\wedge (\lnot A\vee C)\end{aligned}}}


With the use of minimization (sometimes called logic optimization), a simplified logical function or circuit may be arrived upon, and the logic combinational circuit becomes smaller, and easier to analyse, use, or build.

See also[edit]
Asynchronous circuit
Field-programmable gate array
Formal verification
Ladder logic
Programmable logic controller
Relay logic
Sequential logic
Tseytin transformation
References[edit]


^ 
Savant, C.J. Jr.; Roden, Martin; Carpenter, Gordon (1991). Electronic Design: Circuits and Systems. Benjamin/Cummings Publishing Company. p. 682. ISBN 0-8053-0285-9.

^ Lewin, Douglas (1974). Logical Design of Switching Circuits (2nd ed.). Thomas Nelson and Sons. pp. 162–3. ISBN 017-771044-6.


Predko, Michael; Predko, Myke (2004). Digital electronics demystified. McGraw-Hill. ISBN 0-07-144141-7.
External links[edit]
Belton, D.; Bigwood, R. "Combinational Logic & Systems Tutorial Guide". Archived from the original on 2013-10-22.
vteDigital electronicsComponents
Transistor
Resistor
Inductor
Capacitor
Printed electronics
Printed circuit board
Electronic circuit
Flip-flop
Memory cell
Combinational logic
Sequential logic
Logic gate
Boolean circuit
Integrated circuit (IC)
Hybrid integrated circuit (HIC)
Mixed-signal integrated circuit
Three-dimensional integrated circuit (3D IC)
Emitter-coupled logic (ECL)
Erasable programmable logic device (EPLD)
Macrocell array
Programmable logic array (PLA)
Programmable logic device (PLD)
Programmable Array Logic (PAL)
Generic Array Logic (GAL)
Complex programmable logic device (CPLD)
Field-programmable gate array (FPGA)
Field-programmable object array (FPOA)
Application-specific integrated circuit (ASIC)
Tensor Processing Unit (TPU)
Theory
Digital signal
Boolean algebra
Logic synthesis
Logic in computer science
Computer architecture
Digital signal
Digital signal processing
Circuit minimization
Switching circuit theory
Gate equivalent
Design
Logic synthesis
Place and route
Placement
Routing
Transaction-level modeling
Register-transfer level
Hardware description language
High-level synthesis
Formal equivalence checking
Synchronous logic
Asynchronous logic
Finite-state machine
Hierarchical state machine
Applications
Computer hardware
Hardware acceleration
Digital audio
radio
Digital photography
Digital telephone
Digital video
cinematography
television
Electronic literature
Design issues
Metastability
Runt pulse

Authority control databases: National GermanyUnited StatesIsrael




Retrieved from "https://en.wikipedia.org/w/index.php?title=Combinational_logic&oldid=1280851591"
Categories: Logic in computer scienceDigital electronicsHidden categories: Articles with short descriptionShort description is different from Wikidata






 This page was last edited on 16 March 2025, at 20:37 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







Combinational logic




























27 languages


Add topic
















