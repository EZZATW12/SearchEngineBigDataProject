https://en.wikipedia.org/wiki/Electronics_design




Electronic design automation - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
History




Toggle History subsection





1.1
Early days








1.2
Commercial birth








1.3
Modern day










2
Software focuses




Toggle Software focuses subsection





2.1
Design








2.2
Simulation








2.3
Analysis and verification








2.4
Manufacturing preparation








2.5
Functional safety










3
Companies




Toggle Companies subsection





3.1
Current








3.2
Defunct








3.3
Acquisitions










4
Technical conferences








5
See also








6
References


















Toggle the table of contents







Electronic design automation



21 languages




AfrikaansالعربيةAzərbaycancaবাংলাБългарскиCatalàDeutschEspañolفارسیFrançais한국어हिन्दीItaliano日本語PortuguêsРусскийSvenskaУкраїнськаTiếng Việt吴语中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikimedia CommonsWikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia

(Redirected from Electronics design)
Software for designing electronic systems
"ECAD" redirects here. For the Brazilian organization, see ECAD (Brazil). For other uses, see ECAD (disambiguation).
"Electronic design" redirects here. For the magazine, see Electronic Design (magazine).

Electronic design automation (EDA), also referred to as electronic computer-aided design (ECAD),[1] is a category of software tools for designing electronic systems such as integrated circuits and printed circuit boards. The tools work together in a design flow that chip designers use to design and analyze entire semiconductor chips. Since a modern semiconductor chip can have billions of components, EDA tools are essential for their design; this article in particular describes EDA specifically with respect to integrated circuits (ICs).


History[edit]
Early days[edit]
The earliest electronic design automation is attributed to IBM with the documentation of its 700 series computers in the 1950s.[2]
Prior to the development of EDA, integrated circuits were designed by hand and manually laid out.[3] Some advanced shops used geometric software to generate tapes for a Gerber photoplotter, responsible for generating a monochromatic exposure image, but even those copied digital recordings of mechanically drawn components. The process was fundamentally graphic, with the translation from electronics to graphics done manually; the best-known company from this era was Calma, whose GDSII format is still in use today. By the mid-1970s, developers started to automate circuit design in addition to drafting and the first placement and routing tools were developed; as this occurred, the proceedings of the Design Automation Conference catalogued the large majority of the developments of the time.[3]
The next era began following the publication of "Introduction to VLSI Systems" by Carver Mead and Lynn Conway in 1980,[4] and is considered the standard textbook for chip design.[5] The result was an increase in the complexity of the chips that could be designed, with improved access to design verification tools that used logic simulation. The chips were easier to lay out and more likely to function correctly, since their designs could be simulated more thoroughly prior to construction. Although the languages and tools have evolved, this general approach of specifying the desired behavior in a textual programming language and letting the tools derive the detailed physical design remains the basis of digital IC design today.
The earliest EDA tools were produced academically. One of the most famous was the "Berkeley VLSI Tools Tarball", a set of UNIX utilities used to design early VLSI systems. Widely used were the Espresso heuristic logic minimizer,[6] responsible for circuit complexity reductions and Magic,[7] a computer-aided design platform. Another crucial development was the formation of MOSIS,[8] a consortium of universities and fabricators that developed an inexpensive way to train student chip designers by producing real integrated circuits. The basic concept was to use reliable, low-cost, relatively low-technology IC processes and pack a large number of projects per wafer, with several copies of chips from each project remaining preserved. Cooperating fabricators either donated the processed wafers or sold them at cost, as they saw the program as helpful to their own long-term growth.

Commercial birth[edit]
See also: Productivity-improving technologies § Semiconductor device fabrication
1981 marked the beginning of EDA as an industry. For many years, the larger electronic companies, such as Hewlett-Packard, Tektronix and Intel, had pursued EDA internally, with managers and developers beginning to spin out of these companies to concentrate on EDA as a business. Daisy Systems, Mentor Graphics and Valid Logic Systems were all founded around this time and collectively referred to as DMV. In 1981, the U.S. Department of Defense additionally began funding of VHDL as a hardware description language. Within a few years, there were many companies specializing in EDA, each with a slightly different emphasis.
The first trade show for EDA was held at the Design Automation Conference in 1984 and in 1986, Verilog, another popular high-level design language, was first introduced as a hardware description language by Gateway Design Automation. Simulators quickly followed these introductions, permitting direct simulation of chip designs and executable specifications. Within several years, back-ends were developed to perform logic synthesis.

Modern day[edit]
Main articles: Integrated circuit design, Design closure, and Design flow (EDA)
Current digital flows are extremely modular, with front ends producing standardized design descriptions that compile into invocations of units similar to cells without regard to their individual technology. Cells implement logic or other electronic functions via the utilisation of a particular integrated circuit technology. Fabricators generally provide libraries of components for their production processes, with simulation models that fit standard simulation tools.
Most analog circuits are still designed in a manual fashion, requiring specialist knowledge that is unique to analog design (such as matching concepts).[9] Hence, analog EDA tools are far less modular, since many more functions are required, they interact more strongly and the components are, in general, less ideal.
EDA for electronics has rapidly increased in importance with the continuous scaling of semiconductor technology.[10] Some users are foundry operators, who operate the semiconductor fabrication facilities ("fabs") and additional individuals responsible for utilising the technology design-service companies who use EDA software to evaluate an incoming design for manufacturing readiness. EDA tools are also used for programming design functionality into FPGAs or field-programmable gate arrays, customisable integrated circuit designs.


Software focuses[edit]
This article may be too technical for most readers to understand. Please help improve it to make it understandable to non-experts, without removing the technical details. (February 2017) (Learn how and when to remove this message)
Design[edit]
Schematic capture program
Main article: Design flow (EDA)Design flow primarily remains characterised via several primary components; these include:
High-level synthesis (additionally known as behavioral synthesis or algorithmic synthesis) – The high-level design description (e.g. in C/C++) is converted into RTL or the register transfer level, responsible for representing circuitry via the utilisation of interactions between registers.
Logic synthesis – The translation of RTL design description (e.g. written in Verilog or VHDL) into a discrete netlist or representation of logic gates.
Schematic capture – For standard cell digital, analog, RF-like Capture CIS in Orcad by Cadence and ISIS in Proteus.[clarification needed]
Layout – usually schematic-driven layout, like Layout in Orcad by Cadence, ARES in Proteus
Simulation[edit]
Main article: Electronic circuit simulation
Simulated lithographic and other fabrication defects visible in small standard-cell metal interconnects.
Transistor simulation – low-level transistor-simulation of a schematic/layout's behavior, accurate at device-level.
Logic simulation – digital-simulation of an RTL or gate-netlist's digital (Boolean 0/1) behavior, accurate at Boolean-level.
Behavioral simulation – high-level simulation of a design's architectural operation, accurate at cycle-level or interface-level.
Hardware emulation – Use of special purpose hardware to emulate the logic of a proposed design. Can sometimes be plugged into a system in place of a yet-to-be-built chip; this is called in-circuit emulation.
Technology CAD simulate and analyze the underlying process technology. Electrical properties of devices are derived directly from device physics
Analysis and verification[edit]
Functional verification: ensures logic design matches specifications and executes tasks correctly. Includes dynamic functional verification via simulation, emulation, and prototypes.[11]
RTL Linting for adherence to coding rules such as syntax, semantics, and style.[12]
Clock domain crossing verification (CDC check): similar to linting, but these checks/tools specialize in detecting and reporting potential issues like data loss, meta-stability due to use of multiple clock domains in the design.
Formal verification, also model checking: attempts to prove, by mathematical methods, that the system has certain desired properties, and that some undesired effects (such as deadlock) cannot occur.
Equivalence checking: algorithmic comparison between a chip's RTL-description and synthesized gate-netlist, to ensure functional equivalence at the logical level.
Static timing analysis: analysis of the timing of a circuit in an input-independent manner, hence finding a worst case over all possible inputs.
Layout extraction: starting with a proposed layout, compute the (approximate) electrical characteristics of every wire and device.  Often used in conjunction with static timing analysis above to estimate the performance of the completed chip.
Electromagnetic field solvers, or just field solvers, solve Maxwell's equations directly for cases of interest in IC and PCB design. They are known for being slower but more accurate than the layout extraction above.
Physical verification, PV: checking if a design is physically manufacturable, and that the resulting chips will not have any function-preventing physical defects, and will meet original specifications.
Manufacturing preparation[edit]
Mask data preparation or MDP - The generation of actual lithography photomasks, utilised to physically manufacture the chip.
Chip finishing which includes custom designations and structures to improve manufacturability of the layout. Examples of the latter are a seal ring and filler structures.[13]
Producing a reticle layout with test patterns and alignment marks.
Layout-to-mask preparation that enhances layout data with graphics operations, such as resolution enhancement techniques (RET) – methods for increasing the quality of the final photomask. This also includes optical proximity correction  (OPC) or inverse lithography technology (ILT)  – the up-front compensation for diffraction and interference effects occurring later when chip is manufactured using this mask.
Mask generation – The generation of flat mask image from hierarchical design.
Automatic test pattern generation or ATPG – The generation of pattern data systematically to exercise as many logic-gates and other components as possible.
Built-in self-test or BIST – The installation of self-contained test-controllers to automatically test a logic or memory structure in the design
Functional safety[edit]
Functional safety analysis, systematic computation of failure in time (FIT) rates and diagnostic coverage metrics for designs in order to meet the compliance requirements for the desired safety integrity levels.
Functional safety synthesis, add reliability enhancements to structured elements (modules, RAMs, ROMs, register files, FIFOs) to improve fault detection / fault tolerance. This includes (not limited to) addition of error detection and / or correction codes (Hamming), redundant logic for fault detection and fault tolerance (duplicate / triplicate) and protocol checks (interface parity, address alignment, beat count)
Functional safety verification, running of a fault campaign, including insertion of faults into the design and verification that the safety mechanism reacts in an appropriate manner for the faults that are deemed covered.
PCB layout and schematic for connector design
Companies[edit]
Further information: List of EDA companies
Current[edit]
Market capitalization and company name as of March 2023:

$57.87 billion[14] – Synopsys
$56.68 billion[15] – Cadence Design Systems
$24.98 billion[16] – Ansys
AU$4.88 billion[17] – Altium
¥77.25 billion[18] – Zuken
Defunct[edit]
Market capitalization and company name as of December 2011[update]:[19]

$2.33 billion – Mentor Graphics; Siemens acquired Mentor in 2017 and renamed as Siemens EDA in 2021[20][21]
$507 million – Magma Design Automation; Synopsys acquired Magma in February 2012[22][23]
NT$6.44 billion – SpringSoft; Synopsys acquired SpringSoft in August 2012
Acquisitions[edit]
Many EDA companies acquire small companies with software or other technology that can be adapted to their core business.[24] Most of the market leaders are amalgamations of many smaller companies and this trend is helped by the tendency of software companies to design tools as accessories that fit naturally into a larger vendor's suite of programs on digital circuitry; many new tools incorporate analog design and mixed systems.[25] This is happening due to a trend to place entire electronic systems on a single chip.

Technical conferences[edit]
Design Automation Conference
International Conference on Computer-Aided Design
Design Automation and Test in Europe
Asia and South Pacific Design Automation Conference
Symposia on VLSI Technology and Circuits
See also[edit]

Electronics portal



Wikimedia Commons has media related to Electronic design automation.

Computer-aided design (CAD)
Circuit design
EDA database
Foundations and Trends in Electronic Design Automation
Signoff (electronic design automation)
Comparison of EDA software
Platform-based design
Silicon compiler
References[edit]


^ "About the EDA Industry". Electronic Design Automation Consortium. Archived from the original on August 2, 2015. Retrieved July 29, 2015.

^ "1966: Computer Aided Design Tools Developed for ICs". Computer History Museum. Retrieved January 1, 2023.

^ a b "EDA (Electronic Design Automation) - Where Electronics Begins". Embed Journal. May 25, 2013. Retrieved January 1, 2023.

^ Meade, Carver; Conway, Lynn. Introduction to VLSI Design. Addison-Wesley.

^ "Carver Mead Awarded Kyoto Prize by Inamori Foundation". Caltech. June 17, 2022. Retrieved January 1, 2023.

^ Brayton, Robert K., Gary D. Hachtel, Curt McMullen, and Alberto Sangiovanni-Vincentelli (1984). Logic minimization algorithms for VLSI synthesis. Vol. 2. Springer Science & Business Media.{{cite book}}:  CS1 maint: multiple names: authors list (link)

^ Ousterhout, John K., Gordon T. Hamachi, Robert N. Mayo, Walter S. Scott, and George S. Taylor (1985). "The magic VLSI layout system". IEEE Design & Test of Computers. 2 (1): 19–30. doi:10.1109/MDT.1985.294681.{{cite journal}}:  CS1 maint: multiple names: authors list (link)

^ Tomovich, Christine (1988). "MOSIS-A gateway to silicon". IEEE Circuits and Devices Magazine. 4 (2): 22–23. doi:10.1109/101.936.

^ J. Lienig, J. Scheible (2020). "Chap. 6: Special Layout Techniques for Analog IC Design". Fundamentals of Layout Design for Electronic Circuits. Springer. pp. 213–256. doi:10.1007/978-3-030-39284-0. ISBN 978-3-030-39284-0. S2CID 215840278.

^ Lavagno, Martin, and Scheffer (2006). Electronic Design Automation For Integrated Circuits Handbook. Taylor and Francis. ISBN 0849330963.{{cite book}}:  CS1 maint: multiple names: authors list (link)

^ "Functional Verification". Semiconductor Engineering. March 17, 2017. Retrieved April 10, 2023.

^ BTV RTL Linting. Retrieved January 2, 2023

^ J. Lienig, J. Scheible (2020). "Chap. 3.3: Mask Data: Layout Post Processing". Fundamentals of Layout Design for Electronic Circuits. Springer. pp. 102–110. doi:10.1007/978-3-030-39284-0. ISBN 978-3-030-39284-0. S2CID 215840278.

^ "Synopsys, Inc. (SNPS) Stock Price & News - Google Finance". www.google.com. Retrieved March 23, 2023.

^ "Cadence Design Systems Inc (CDNS) Stock Price & News - Google Finance". www.google.com. Retrieved March 23, 2023.

^ "ANSYS, Inc. (ANSS) Stock Price & News". Google Finance. Retrieved December 4, 2023.

^ "Altium Limited (ALU) Stock Price & News - Google Finance". www.google.com. Retrieved March 23, 2023.

^ "Zuken Inc (6947) Stock Price & News - Google Finance". www.google.com. Retrieved March 23, 2023.

^ Company Comparison - Google Finance. Google.com. Retrieved on 2013-08-10.

^ "Siemens acquires Mentor Graphics for $4.5 billion, eyes connected device, building expansion". ZDNET. Retrieved March 23, 2023.

^ Dahad, Nitin (December 15, 2020). "Mentor Finally Becomes Siemens EDA From January 2021". EE Times. Retrieved March 23, 2023.

^ Dylan McGrath (November 30, 2011). "Synopsys to buy Magma for $507 million". EETimes. Archived from the original on October 25, 2012. Retrieved July 17, 2012.

^ "Synopsys to Acquire Magma Design Automation".

^ Kirti Sikri Desai (2006). "EDA Innovation through Merger and Acquisitions". EDA Cafe. Retrieved March 23, 2010.

^ "Semi Wiki:EDA Mergers and Acquisitions Wiki". SemiWiki.com. January 16, 2011. Archived from the original on April 3, 2019. Retrieved April 3, 2019.


Notes

http://www.staticfreesoft.com/documentsTextbook.html Computer Aids for VLSI Design by Steven M. Rubin
Fundamentals of Layout Design for Electronic Circuits, by Lienig, Scheible, Springer, doi:10.1007/978-3-030-39284-0ISBN 978-3-030-39284-0, 2020
VLSI Physical Design: From Graph Partitioning to Timing Closure, by Kahng, Lienig, Markov and Hu, doi:10.1007/978-3-030-96415-3ISBN 978-3-030-96414-6, 2022
Electronic Design Automation For Integrated Circuits Handbook, by Lavagno, Martin, and Scheffer, ISBN 0-8493-3096-3, 2006
The Electronic Design Automation Handbook, by Dirk Jansen et al., Kluwer Academic Publishers, ISBN 1-4020-7502-2, 2003, available also in German ISBN 3-446-21288-4 (2005)
Combinatorial Algorithms for Integrated Circuit Layout, by Thomas Lengauer, ISBN 3-519-02110-2, Teubner Verlag, 1997.

vteComputer-aided design (CAD) softwareFree andopen-sourceMechanical
BRL-CAD
FreeCAD
HeeksCAD
LibreCAD
Open Cascade Technology
OpenSCAD
OpenVSP
QCAD
rattleCAD
Salome
SolveSpace
Electrical
Electric
FreePCB
Fritzing
gEDA
Horizon EDA
KiCad
kTechLab
Magic
ngspice
Oregano
pcb-rnd
QUCS
SPICE
XCircuit
ProprietaryMechanical
ABViewer
Alibre Design
Archicad
AutoCAD
Autodesk Alias
Autodesk Inventor
Autodesk Revit
AutoTURN
BricsCAD
CATIA
Cimatron
Cobalt
Creo Elements/Direct Drafting, Creo Parametric
DesignSpark Mechanical
FastCAD (EasyCAD)
FINE
FORAN
Fusion 360
GstarCAD
IRONCAD
KeyCreator (CADKEY)
MEDUSA4
MicroStation
NX
Onshape
PDMS
Pro/DESKTOP
Rhinoceros 3D
Grasshopper 3D
rattleCAD 4.0
Shapr3D
Solid Edge
SolidWorks
Sonata (RUCAPS)
SpaceClaim
T-FLEX CAD
Tinkercad
TurboCAD
VariCAD
ZWCAD
Electrical
Allegro (OrCAD)
Altium Designer (Protel (Autotrax (Easytrax, Tango PCB)), P-CAD)
AutoCAD Electrical
BoardStation, IntegraStation, PADS, Xpedition
CADSTAR
CircuitMaker
CR-2000, CR-3000, CR-5000, CR-8000
DesignSpark PCB
DipTrace
EAGLE
EasyEDA
LTspice
Micro-Cap
Multisim
PCB
Proteus
Pulsonix
SolidWorks Electrical
TARGET
TopoR (Delta Design, FreeStyle)
Ultiboard
Upverter
File formats
3MF
ACIS
AMF
C3D
CKD
DSN
DWF
DWFX
DWG
DXF
IGES
OBJ
OpenDWG
PLY
PSpice
SES
STEP
STL
Modelingkernels
ACIS
C3D
Digital Geometric Kernel (KernelCAD)
IntelliCAD
Open Cascade Technology
Open Design Alliance (Teigha)
Romulus (Parasolid)
RGK
ShapeManager
SMLib
Historic
DAC-1 (1963)
Sketchpad (1963)
UNISURF (1968)
Italics = discontinuedComputer-aided industrial design • Comparison • History
vteComputer scienceNote: This template roughly follows the 2012 ACM Computing Classification System.Hardware
Printed circuit board
Peripheral
Integrated circuit
Very Large Scale Integration
Systems on Chip (SoCs)
Energy consumption (Green computing)
Electronic design automation
Hardware acceleration
Processor
Size / Form
Computer systems organization
Computer architecture
Computational complexity
Dependability
Embedded system
Real-time computing
Networks
Network architecture
Network protocol
Network components
Network scheduler
Network performance evaluation
Network service
Software organization
Interpreter
Middleware
Virtual machine
Operating system
Software quality
Software notations and tools
Programming paradigm
Programming language
Compiler
Domain-specific language
Modeling language
Software framework
Integrated development environment
Software configuration management
Software library
Software repository
Software development
Control variable
Software development process
Requirements analysis
Software design
Software construction
Software deployment
Software engineering
Software maintenance
Programming team
Open-source model
Theory of computation
Model of computation
Stochastic
Formal language
Automata theory
Computability theory
Computational complexity theory
Logic
Semantics
Algorithms
Algorithm design
Analysis of algorithms
Algorithmic efficiency
Randomized algorithm
Computational geometry
Mathematics of computing
Discrete mathematics
Probability
Statistics
Mathematical software
Information theory
Mathematical analysis
Numerical analysis
Theoretical computer science
Information systems
Database management system
Information storage systems
Enterprise information system
Social information systems
Geographic information system
Decision support system
Process control system
Multimedia information system
Data mining
Digital library
Computing platform
Digital marketing
World Wide Web
Information retrieval
Security
Cryptography
Formal methods
Security hacker
Security services
Intrusion detection system
Hardware security
Network security
Information security
Application security
Human–computer interaction
Interaction design
Social computing
Ubiquitous computing
Visualization
Accessibility
Concurrency
Concurrent computing
Parallel computing
Distributed computing
Multithreading
Multiprocessing
Artificial intelligence
Natural language processing
Knowledge representation and reasoning
Computer vision
Automated planning and scheduling
Search methodology
Control method
Philosophy of artificial intelligence
Distributed artificial intelligence
Machine learning
Supervised learning
Unsupervised learning
Reinforcement learning
Multi-task learning
Cross-validation
Graphics
Animation
Extended reality
Augmented
Mixed
Virtual
Virtuality
Rendering
Photograph manipulation
Graphics processing unit
Image compression
Solid modeling
Applied computing
Quantum Computing
E-commerce
Enterprise software
Computational mathematics
Computational physics
Computational chemistry
Computational biology
Computational social science
Computational engineering
Differentiable computing
Computational healthcare
Digital art
Electronic publishing
Cyberwarfare
Electronic voting
Video games
Word processing
Operations research
Educational technology
Document management

 Category
 Outline
 Glossaries

Authority control databases: National GermanyUnited StatesIsrael




Retrieved from "https://en.wikipedia.org/w/index.php?title=Electronic_design_automation&oldid=1285943885"
Categories: Electronic design automationElectronic engineeringHidden categories: CS1 maint: multiple names: authors listArticles with short descriptionShort description is different from WikidataUse American English from April 2019All Wikipedia articles written in American EnglishUse mdy dates from June 2012Wikipedia articles that are too technical from February 2017All articles that are too technicalWikipedia articles needing clarification from September 2020Articles containing potentially dated statements from December 2011All articles containing potentially dated statementsCommons category link from Wikidata






 This page was last edited on 16 April 2025, at 19:07 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







Electronic design automation




























21 languages


Add topic
















