https://en.wikipedia.org/wiki/DEC_Alpha




DEC Alpha - Wikipedia



































Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages



















Search











Search






















Appearance
















Donate

Create account

Log in








Personal tools





Donate Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1
History




Toggle History subsection





1.1
PRISM








1.2
RISCy VAX








1.3
Alpha








1.4
Improved models










2
Design principles




Toggle Design principles subsection





2.1
Condition codes










3
Registers








4
Data types








5
Memory








6
Instruction formats








7
Instruction set




Toggle Instruction set subsection





7.1
Control instructions








7.2
Integer arithmetic








7.3
Logical and shift










8
Extensions




Toggle Extensions subsection





8.1
Byte-Word Extensions (BWX)








8.2
Motion Video Instructions (MVI)








8.3
Floating-point Extensions (FIX)








8.4
Count Extensions (CIX)










9
Implementations




Toggle Implementations subsection





9.1
Model history










10
Performance








11
Alpha-based systems




Toggle Alpha-based systems subsection





11.1
Supercomputers










12
Notes








13
References








14
External links


















Toggle the table of contents







DEC Alpha



23 languages




Беларуская (тарашкевіца)ČeštinaDeutschEspañolEsperantoEuskaraفارسیFrançais한국어Bahasa IndonesiaItalianoMagyarNederlands日本語Norsk bokmålPolskiPortuguêsРусскийSuomiSvenskaTürkçeУкраїнська中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code





		Print/export
	


Download as PDFPrintable version





		In other projects
	


Wikimedia CommonsWikidata item





















Appearance
move to sidebar
hide










From Wikipedia, the free encyclopedia


64-bit RISC instruction set architecture
Alpha"Alpha Generation" logo used by DigitalDesignerDigital Equipment CorporationBits64-bitIntroduced1992; 33 years ago (1992)DesignRISCTypeLoad–storeEncodingFixedEndiannessBiExtensionsByte/Word Extension (BWX), Square-root and Floating-point Convert Extension (FIX), Count Extension (CIX), Motion Video Instructions (MVI)OpenYes[1]RegistersGeneral-purpose31 plus always-zero R31Floating point31 plus always-0.0 F31
Alpha microprocessorsDEC AXP 21064 die photoDEC AXP 21064 packageDEC AXP 21064 bare die mounted on business card with some statisticsCompaq 21264C
Alpha (original name Alpha AXP) is a 64-bit reduced instruction set computer (RISC) instruction set architecture (ISA) developed by Digital Equipment Corporation (DEC). Alpha was designed to replace 32-bit VAX complex instruction set computers (CISC) and to be a highly competitive RISC processor for Unix workstations and similar markets.
Alpha was implemented in a series of microprocessors originally developed and fabricated by DEC. These microprocessors were most prominently used in a variety of DEC workstations and servers, which eventually formed the basis for almost all of their mid-to-upper-scale lineup. Several third-party vendors also produced Alpha systems, including PC form factor motherboards.
Operating systems that support Alpha included OpenVMS (formerly named OpenVMS AXP), Tru64 UNIX (formerly named DEC OSF/1 AXP and Digital UNIX), Windows NT (discontinued after NT 4.0; and prerelease Windows 2000 RC2),[2] Linux (Debian, SUSE,[3] Gentoo and Red Hat), BSD UNIX (NetBSD, OpenBSD and FreeBSD up to 6.x), Plan 9 from Bell Labs, and the L4Ka::Pistachio kernel. A port of Ultrix to Alpha was carried out during the initial development of the Alpha architecture, but was never released as a product.[4]
The Alpha architecture was sold, along with most parts of DEC, to Compaq in 1998.[5] Compaq, already an Intel x86 customer, announced that they would phase out Alpha in favor of the forthcoming Hewlett-Packard/Intel Itanium architecture, and sold all Alpha intellectual property to Intel, in 2001,[6] effectively killing the product. Hewlett-Packard purchased Compaq in 2002, continuing development of the existing product line until 2004, and selling Alpha-based systems, largely to the existing customer base, until April 2007.[7]


History[edit]
PRISM[edit]
Main article: DEC PRISM
Alpha emerged from an earlier RISC project named Parallel Reduced Instruction Set Machine (PRISM), itself the product of several earlier projects. PRISM was intended to be a flexible design, supporting Unix-like applications, and Digital's existing VAX/VMS software, after minor conversion. A new operating system named MICA would support both ULTRIX and VAX/VMS interfaces on a common kernel, allowing software for both platforms to be easily ported to the PRISM architecture.[8]
Started in 1985, the PRISM design was continually changed during its development in response to changes in the computer market, leading to lengthy delays in its introduction. It was not until the summer of 1987 that it was decided that it would be a 64-bit design, among the earliest such designs in a microprocessor format. In October 1987, Sun Microsystems introduced the Sun-4, their first workstation using their new SPARC processor. The Sun-4 runs about three to four times as fast as their latest Sun-3 designs using the Motorola 68020, and any Unix offering from DEC. The plans changed again; PRISM was realigned once again as a 32-bit part and aimed directly at the Unix market. This further delayed the design.[9]
Having watched the PRISM delivery date continue to slip, and facing the possibility of more delays, a team in the Palo Alto office decided to design their own workstation using another RISC processor. After due diligence, they selected the MIPS R2000 and built a working workstation running Ultrix in a period of 90 days.[10] This sparked off an acrimonious debate within the company, which came to a head in a July 1988 management meeting. PRISM appeared to be faster than the R2000, but the R2000 machines could be in the market by January 1989, a year earlier than PRISM. When this proposal was accepted, one of the two original roles for PRISM disappeared. The decision to make a VMS PRISM had already ended by this point, so there was no remaining role. PRISM was cancelled at the meeting.[11]

RISCy VAX[edit]
As the meeting broke up, Bob Supnik was approached by Ken Olsen, who stated that the RISC chips appeared to be a future threat to their VAX line. He asked Supnik to consider what might be done with VAX to keep it competitive with future RISC systems.[9]
This led to the formation of the "RISCy VAX" team. They initially considered three concepts. One was a cut-down version of the VAX instruction set architecture (ISA) that would run on a RISC-like system and leave more complex VAX instructions to system subroutines. Another concept was a pure RISC system that would translate existing VAX code into its own ISA on-the-fly and store it in a CPU cache. Finally, there was still the possibility of a much faster CISC processor running the complete VAX ISA. Unfortunately, all of these approaches introduced overhead and would not be competitive with a pure-RISC machine running native RISC code.[12]
The group then considered hybrid systems that combined one of their existing VAX one-chip solution and a RISC chip as a coprocessor used for high-performance needs. These studies suggested that the system would inevitably be hamstrung by the lower-performance part and would offer no compelling advantage. It was at this point that Nancy Kronenberg pointed out that people ran VMS, not VAX, and that VMS only had a few hardware dependencies based on its modelling of interrupts and memory paging. There appeared to be no compelling reason why VMS could not be ported to a RISC chip as long as these small bits of the model were preserved. Further work on this concept suggested this was a workable approach.[12]
Supnik took the resulting report to the Strategy Task Force in February 1989. Two questions were raised: could the resulting RISC design also be a performance leader in the Unix market, and should the machine be an open standard? And with that, the decision was made to adopt the PRISM architecture with the appropriate modifications. This became the "EVAX" concept, a follow-on to the successful CMOS CVAX implementation. When management accepted the findings, they decided to give the project a more neutral name, removing "VAX", eventually settling on Alpha.[13] The name was inspired by the use of "Omega" as the codename of an NVAX-based VAX 4000 model; "Alpha" was intended to signify the beginning of a new line (with reference to Alpha and Omega).[14] Soon after, work began on a port of VMS to the new architecture.[15]

Alpha[edit]
The new design uses most of the basic PRISM concepts, but was re-tuned to allow VMS and VMS programs to run at reasonable speed with no conversion at all. The primary Alpha instruction set architects were Richard L. Sites and Richard T. Witek.[16] The PRISM's Epicode was developed into the Alpha's PALcode, providing an abstracted interface to platform- and processor implementation-specific features.
The main contribution of Alpha to the microprocessor industry, and the main reason for its performance, is not so much the architecture but rather its implementation.[17] At that time (as it is now), the microchip industry was dominated by automated design and layout tools. The chip designers at Digital continued pursuing sophisticated manual circuit design in order to deal with the complex VAX architecture. The Alpha chips show that manual circuit design applied to a simpler, cleaner architecture allows for much higher operating frequencies than those that are possible with the more automated design systems. These chips caused a renaissance of custom circuit design within the microprocessor design community.
Originally, the Alpha processors were designated the DECchip 21x64 series,[18] with "DECchip" replaced in the mid-1990s with "Alpha". The first two digits, "21" signifies the 21st century, and the last two digits, "64" signifies 64 bits.[18] The Alpha was designed as 64-bit from the start and there is no 32-bit version. The middle digit corresponds to the generation of the Alpha architecture. Internally, Alpha processors were also identified by EV numbers, EV officially standing for "Extended VAX" but having an alternative humorous meaning of "Electric Vlasic", giving homage to the Electric Pickle experiment at Western Research Lab.[19] The number in the EV designations indicated the semiconductor process which the chip was designed for. For example, the EV4 processor used DEC's CMOS-4 process.[12]
In May 1997, DEC sued Intel for allegedly infringing on its Alpha patents in designing the original Pentium, Pentium Pro, and Pentium II chips.[20] As part of a settlement, much of DEC's chip design and fabrication business was sold to Intel. This included DEC's StrongARM implementation of the ARM computer architecture, which Intel marketed as the XScale processors commonly used in Pocket PCs. The core of Digital Semiconductor, the Alpha microprocessor group, remained with DEC, while the associated office buildings went to Intel as part of the Hudson fab.[21]

Improved models[edit]
The first few generations of the Alpha chips were some of the most innovative of their time.

A pre-production model, designated EV3, was used in a prototype system named the Alpha Demonstration Unit (ADU). ADUs were used to port operating systems to the Alpha architecture. One key difference between the EV3 and later models was the absence of a floating-point unit.[22]
The first version, the Alpha 21064 or EV4, is the first CMOS microprocessor whose operating frequency rivalled higher-powered ECL minicomputers and mainframes.
The second, 21164 or EV5, is the first microprocessor to place a large secondary cache on-chip.[23]
The third, 21264 or EV6, is the first microprocessor to combine both high operating frequency and the more complicated out-of-order execution microarchitecture.
The 21364 or EV7 is the first high performance processor to have an on-chip memory controller.[24]
The unproduced 21464 or EV8 would have been the first to include simultaneous multithreading, but this version was canceled after the sale of DEC to Compaq. The Tarantula research project, which most likely would have been called EV9, would have been the first Alpha processor to feature a vector processor unit.[25]
A persistent report attributed to DEC insiders suggests the choice of the AXP tag for the processor was made by DEC's legal department, which was still smarting from the VAX trademark fiasco.[26] After a lengthy search the tag "AXP" was found to be entirely unencumbered. Within the computer industry, a joke got started that the acronym AXP meant "Almost eXactly PRISM".[27]

Design principles[edit]
The Alpha architecture was intended to be a high-performance design. Digital intended the architecture to support a one-thousandfold increase in performance over twenty-five years. To ensure this, any architectural feature that impeded multiple instruction issue, clock rate or multiprocessing was removed. As a result, the Alpha does not have:

Branch delay slots
Suppressed instructions[clarification needed]
Byte load or store instructions (later added with the Byte Word Extensions (BWX))[28][29]
Condition codes[edit]
The Alpha does not have condition codes for integer instructions[30] to remove a potential bottleneck at the condition status register. Instructions resulting in an overflow, such as adding two numbers whose result does not fit in 64 bits, write the 32 or 64 least significant bits to the destination register. The carry is generated by performing an unsigned compare on the result with either operand to see if the result is smaller than either operand. If the test was true, the value one is written to the least significant bit of the destination register to indicate the condition.

Registers[edit]

DEC Alpha registers





63

. . .

47

. . .

31

. . .

15

. . .

01

00

(bit position)


General-purpose registers


R0

R0


R1

R1


R2

R2


•

 


•

 


•

 


R29

R29


R30

R30


(zero)R31 (zero)

R31, always zero


Floating-point registers


F0

F0


F1

F1


F2

F2


•

 


•

 


•

 


F29

F29


F30

F30


(zero)F31 (zero)

F31, always zero


Program counter


PC

0

0

Program Counter


Control registers


LR0

Lock Register 0


LR1

Lock Register 1


FPCR

FP Control Register


The architecture defines a set of 32 integer registers and a set of 32 floating-point registers in addition to a program counter, two lock registers and a floating-point control register (FPCR). It also defines registers that were optional, implemented only if the implementation required them. Lastly, registers for PALcode are defined.
The integer registers are denoted by R0 to R31 and floating-point registers are denoted by F0 to F31. The R31 and F31 registers are hardwired to zero and writes to those registers by instructions are ignored. Digital considered using a combined register file, but a split register file was determined to be better, as it enables two-chip implementations to have a register file located on each chip and integer-only implementations to omit the floating-point register file containing the floating-point registers. A split register file was also determined to be more suitable for multiple instruction issue due to the reduced number of read and write ports. The number of registers per register file was also considered, with 32 and 64 being contenders. Digital concluded that 32 registers was more suitable as it required less die space, which improves clock frequencies. This number of registers was deemed not to be a major issue in respect to performance and future growth, as thirty-two registers could support at least eight-way instruction issue.
The program counter is a 64-bit register which contains a longword-aligned virtual byte address, that is, the low two bits of the program counter are always zero. The PC is incremented by four to the address of the next instruction when an instruction is decoded. A lock flag and locked physical address register are used by the load-locked and store-conditional instructions for multiprocessor support. The floating-point control register (FPCR) is a 64-bit register defined by the architecture intended for use by Alpha implementations with IEEE 754-compliant floating-point hardware.

Data types[edit]
In the Alpha architecture, a byte is defined as an 8-bit datum (octet), a word as a 16-bit datum, a longword as a 32-bit datum, a quadword as a 64-bit datum, and an octaword as a 128-bit datum.
The Alpha architecture originally defined six data types:

Quadword (64-bit) integer
Longword (32-bit) integer
IEEE T-floating-point (double precision, 64-bit)
IEEE S-floating-point (single precision, 32-bit)
To maintain a level of compatibility with the VAX, the 32-bit architecture that preceded the Alpha, two other floating-point data types are included:

VAX G-floating point (double precision, 64-bit)
VAX F-floating point (single precision, 32-bit)
VAX H-floating point (quad precision, 128-bit) was not supported,[31] but another 128-bit floating-point option, X-floating point, is available on Alpha, but not VAX.[32]H and X have been described as similar, but not identical. Software emulation for H-floating is available from DEC, as is a source-code level converter named DECmigrate.

Memory[edit]
The Alpha has a 64-bit linear virtual address space with no memory segmentation. Implementations can implement a smaller virtual address space with a minimum size of 43 bits. Although the unused bits were not implemented in hardware such as TLBs, the architecture required implementations to check whether they are zero to ensure software compatibility with implementations with a larger (or full) virtual address space.

Instruction formats[edit]
The Alpha ISA has a fixed instruction length of 32 bits. It has six instruction formats.



Type

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0


Integer operate

Opcode

Ra

Rb

Unused

0

Function

Rc


Integer operate, literal

Opcode

Ra

Literal

1

Function

Rc


Floating-point operate

Opcode

Ra

Rb

Function

Rc


Memory format

Opcode

Ra

Rb

Displacement


Branch format

Opcode

Ra

Displacement


CALL_PAL format

Opcode

Function


The integer operate format is used by integer instructions. It contains a 6-bit opcode field, followed by the Ra field, which specifies the register containing the first operand and the Rb field, specifies the register containing the second operand. Next is a 3-bit field which is unused and reserved. A 1-bit field contains a "0", which distinguished this format from the integer literal format. A 7-bit function field follows, which is used in conjunction with the opcode to specify an operation. The last field is the Rc field, which specifies the register which the result of a computation should be written to. The register fields are all 5 bits long, required to address 32 unique locations, the 32 integer registers.
The integer literal format is used by integer instructions which use a literal as one of the operands. The format is the same as the integer operate format except for the replacement of the 5-bit Rb field and the 3 bits of unused space with an 8-bit literal field which is zero-extended to a 64-bit operand.
The floating-point operate format is used by floating-point instructions. It is similar to the integer operate format, but has an 11-bit function field made possible by using the literal and unused bits which are reserved in integer operate format.
The memory format is used mostly by load and store instructions. It has a 6-bit opcode field, a 5-bit Ra field, a 5-bit Rb field and a 16-bit displacement field.
Branch instructions have a 6-bit opcode field, a 5-bit Ra field and a 21-bit displacement field. The Ra field specifies a register to be tested by a conditional branch instruction, and if the condition is met, the program counter is updated by adding the contents of the displacement field with the program counter. The displacement field contains a signed integer and if the value of the integer is positive, if the branch is taken then the program counter is incremented. If the value of the integer is negative, then program counter is decremented if the branch is taken. The range of a branch thus is ±1 Mi instructions, or ±4 MiB. The Alpha Architecture was designed with a large range as part of the architecture's forward-looking goal.
The CALL_PAL format is used by the CALL_PAL instruction, which is used to call PALcode subroutines. The format retains the opcode field but replaces the others with a 26-bit function field, which contains an integer specifying a PAL subroutine.

Instruction set[edit]
Control instructions[edit]
The control instructions consist of conditional and unconditional branches, and jumps. The conditional and unconditional branch instructions use the branch instruction format, while the jump instructions use the memory instruction format.
Conditional branches test whether the least significant bit of a register is set or clear, or compare a register as a signed quadword to zero, and branch if the specified condition is true. The conditions available for comparing a register to zero are equality, inequality, less than, less than or equal to, greater than or equal to, and greater than. The new address is computed by longword aligning and sign extending the 21-bit displacement and adding it to the address of the instruction following the conditional branch.
Unconditional branches update the program counter with a new address computed in the same way as conditional branches. They also save the address of the instruction following the unconditional branch to a register. There are two such instructions, and they differ only in the hints provided for the branch prediction hardware.
There are four jump instructions. These all perform the same operation, saving the address of the instruction following the jump, and providing the program counter with a new address from a register. They differ in the hints provided to the branch prediction hardware. The unused displacement field is used for this purpose.

Integer arithmetic[edit]
The integer arithmetic instructions perform addition, multiplication, and subtraction on longwords and quadwords; and comparison on quadwords. There is no instruction(s) for division as the architects considered the implementation of division in hardware to be adverse to simplicity. In addition to the standard add and subtract instructions, there are scaled versions. These versions shift the second operand to the left by two or three bits before adding or subtracting. The Multiply Longword and Multiply Quadword instructions write the least significant 32 or 64 bits of a 64- or 128-bit result to the destination register, respectively. Since it is useful to obtain the most significant half, the Unsigned Multiply Quadword High (UMULH) instruction is provided. UMULH is used for implementing multi-precision arithmetic and division algorithms. The concept of a separate instruction for multiplication that returns the most significant half of a result was taken from PRISM.
The instructions that operate on longwords ignore the most significant half of the register and the 32-bit result is sign-extended before it is written to the destination register. By default, the add, multiply, and subtract instructions, with the exception of UMULH and scaled versions of add and subtract, do not trap on overflow. When such functionality is required, versions of these instructions that perform overflow detection and trap on overflow are provided.
The compare instructions compare two registers or a register and a literal and write '1' to the destination register if the specified condition is true or '0' if not. The conditions are equality, inequality, less than or equal to, and less than. With the exception of the instructions that specify the former two conditions, there are versions that perform signed and unsigned compares.
The integer arithmetic instructions use the integer operate instruction formats.

Logical and shift[edit]
The logical instructions consist of those for performing bitwise logical operations and conditional moves on the integer registers. The bitwise logical instructions perform AND, NAND, NOR, OR, XNOR, and XOR between two registers or a register and literal. The conditional move instructions test a register as a signed quadword to zero and move if the specified condition is true. The specified conditions are equality, inequality, less than or equal to, less than, greater than or equal to, and greater than. The shift instructions perform arithmetic right shift, and logical left and right shifts. The shift amount is given by a register or literal. Logical and shift instructions use the integer operate instruction formats.

Extensions[edit]
Byte-Word Extensions (BWX)[edit]
Later Alphas include byte-word extensions, a set of instructions to manipulate 8-bit and 16-bit data types. These instructions were first introduced in the 21164A (EV56) microprocessor and are present in all subsequent implementations. These instructions perform operations that formerly required multiple instructions to implement, which improves code density and the performance of certain applications. BWX also makes the emulation of x86 machine code and the writing of device drivers easier.[33]



Mnemonic

Instruction


LDBU

Load Zero-Extended Byte from Memory to Register


LDWU

Load Zero-Extended Word from Memory to Register


SEXTB

Sign Extend Byte


SEXTW

Sign Extend Word


STB

Store Byte from Register to Memory


STW

Store Word from Register to Memory


Motion Video Instructions (MVI)[edit]
Motion Video Instructions (MVI) was an instruction set extension to the Alpha ISA that added instructions for single instruction, multiple data (SIMD) operations.[34] Alpha implementations that implement MVI, in chronological order, are the Alpha 21164PC (PCA56 and PCA57), Alpha 21264 (EV6) and Alpha 21364 (EV7). Unlike most other SIMD instruction sets of the same period, such as MIPS' MDMX or SPARC's Visual Instruction Set, but like PA-RISC's Multimedia Acceleration eXtensions (MAX-1, MAX-2), MVI was a simple instruction set composed of a few instructions that operate on integer data types stored in existing integer registers.
MVI's simplicity is due to two reasons. Firstly, Digital had determined that the Alpha 21164 was already capable of performing DVD decoding through software, therefore not requiring hardware provisions for the purpose, but was inefficient in MPEG-2 encoding. The second reason is the requirement to retain the fast cycle times of implementations. Adding many instructions would have complicated and enlarged the instruction decode logic, reducing an implementation's clock frequency.
MVI consists of 13 instructions:



Mnemonic

Instruction


MAXSB8

Vector Signed Byte Maximum


MAXSW4

Vector Signed Word Maximum


MAXUB8

Vector Unsigned Byte Maximum


MAXUW4

Vector Unsigned Word Maximum


MINSB8

Vector Signed Byte Minimum


MINSW4

Vector Signed Word Minimum


MINUB8

Vector Unsigned Byte Minimum


MINUW4

Vector Unsigned Word Minimum


PERR

Pixel Error


PKLB

Pack Longwords to Bytes


PKWB

Pack Words to Bytes


UNPKBL

Unpack Bytes to Longwords


UNPKBW

Unpack Bytes to Words


vteInstruction set extensionsSIMD (RISC)
Alpha
MVI
ARM
NEON
SVE
MIPS
MDMX
MIPS-3D
MXU
MIPS SIMD
PA-RISC
MAX
Power ISA
VMX
SPARC
VIS
SIMD (x86)
MMX (1996)
3DNow! (1998)
SSE (1999)
SSE2 (2001)
SSE3 (2004)
SSSE3 (2006)
SSE4 (2006)
SSE5 (2007)
AVX (2008)
F16C (2009)
XOP (2009)
FMA (FMA4: 2011, FMA3: 2012)
AVX2 (2013)
AVX-512 (2015)
AMX (2022)
AVX10 (2023)
Bit manipulation
BMI (ABM: 2007, BMI1: 2012, BMI2: 2013, TBM: 2012)
ADX (2014)
Compressed instructions
Thumb
MIPS16e ASE
RVC
Security and cryptography
PadLock (2003)
AES-NI (2008); ARMv8 also has AES instructions
CLMUL (2010)
RDRAND (2012)
SHA (2013)
MPX (2015)
SGX (2015)
TDX (2021)
Transactional memory
TSX (2013)
ASF
Virtualization
VT-x (2005)
AMD-V (2006)
VT-d (AMD-Vi)
Suspended extensions' dates are struck through.
Floating-point Extensions (FIX)[edit]
Floating-point extensions (FIX) are an extension to the Alpha Architecture. It introduces nine instructions for floating-point square-root and for transferring data to and from the integer registers and floating-point registers. The Alpha 21264 (EV6) is the first microprocessor to implement these instructions.



Mnemonic

Instruction


FTOIS

Floating-point to Integer Register Move, S_floating


FTOIT

Floating-point to Integer Register Move, T_floating


ITOFF

Integer to Floating-point Register Move, F_floating


ITOFS

Integer to Floating-point Register Move, S_floating


ITOFT

Integer to Floating-point Register Move, T_floating


SQRTF

Square root F_floating


SQRTG

Square root G_floating


SQRTS

Square root S_floating


SQRTT

Square root T_floating


Count Extensions (CIX)[edit]
Count Extensions (CIX) is an extension to the architecture which introduces three instructions for counting bits. These instructions are categorized as integer arithmetic instructions. They were first implemented on the Alpha 21264A (EV67).



Mnemonic

Instruction


CTLZ

Count Leading Zero


CTPOP

Count Population


CTTZ

Count Trailing Zero


Implementations[edit]
At the time of its announcement, Alpha was heralded as an architecture for the next 25 years. While this was not to be, Alpha has nevertheless had a reasonably long life. The first version, the Alpha 21064 (otherwise named the EV4) was introduced in November 1992 running at up to 192 MHz; a slight shrink of the die (the EV4S, shrunk from 0.75 μm to 0.675 μm) ran at 200 MHz a few months later. The 64-bit processor was a superpipelined and superscalar design, like other RISC designs, but nevertheless outperformed them all and DEC touted it as the world's fastest processor. Careful attention to circuit design, a hallmark of the Hudson design team, like a huge centralized clock circuitry, allowed them to run the CPU at higher speeds, even though the microarchitecture was fairly similar to other RISC chips. In comparison, the less expensive Intel Pentium ran at 66 MHz when it was launched the following spring.
The Alpha 21164 or EV5 became available in 1995 at processor frequencies of up to 333 MHz. In July 1996 the line was speed bumped to 500 MHz, in March 1998 to 666 MHz. Also in 1998 the Alpha 21264 (EV6) was released at 450 MHz, eventually reaching (in 2001 with the 21264C/EV68CB) 1.25 GHz. In 2003, the Alpha 21364 or EV7 Marvel was launched, essentially an EV68 core with four 1.6 GB/s[a] inter-processor communication links for improved multiprocessor system performance, running at 1 or 1.15 GHz.
In 1996, the production of Alpha chips was licensed to Samsung Electronics Company. Following the purchase of Digital by Compaq the majority of the Alpha products were placed with API NetWorks, Inc. (formerly Alpha Processor Inc.), a private company funded by Samsung and Compaq. In October 2001, Microway became the exclusive sales and service provider of API NetWorks' Alpha-based product line.
On June 25, 2001, Compaq announced that Alpha would be phased out by 2004 in favor of Intel's Itanium, canceled the planned EV8 chip, and sold all Alpha intellectual property to Intel.[6] Hewlett-Packard merged with Compaq in 2002; HP announced that development of the Alpha series would continue for a few more years, including the release of a 1.3 GHz EV7 variant named the EV7z. This would be the final iteration of Alpha, the 0.13 μm EV79 also being canceled.
Alpha is also implemented in the Piranha, a research prototype developed by Compaq's Corporate Research and Nonstop Hardware Development groups at the Western Research Laboratory and Systems Research Center. Piranha is a multicore design for transaction processing workloads that contains eight simple cores. It was described at the 27th Annual International Symposium on Computer Architecture in June 2000.[35]
Early revisions of the Sunway architecture are claimed to be based on Alpha, however since the SW26010, Sunway uses a new instruction set architecture unrelated to Alpha.[36][37]

Model history[edit]


Model

Model number

Year

Frequency [MHz]

Process [μm]

Transistors [millions]

Die size [mm2]

IO pins

Power [W]

Voltage

Dcache [KB][b]

Icache [KB]

Scache

Bcache

ISA


EV4

21064
1992
100–200
0.75
1.68
234
290
30
3.3
8
8
–
128 KB–16 MB
 


EV4S

21064
1993
100–200
0.675
1.68
186
290
27
3.3
8
8
–
128 KB–16 MB
 


EV45

21064A
1994
200–300
0.5
2.85
164

33
3.3
16
16
–
256 KB–16 MB
 


LCA4

21066
1993
100–166
0.675
1.75
209

21
3.3
8
8
–
 
 


LCA4

21068
1994
66
0.675
1.75
209

9
3.3
8
8
–
 
 


LCA45

21066A
1994
100–266
0.5
1.8
161

23
3.3
8
8
–
 
 


LCA45

21068A
1994
100
0.5
1.8
161


3.3
8
8
–
 
 


EV5

21164
1995
266–500
0.5
9.3
299
296
56
3.3/2.5
8
8
96 KB
Up to 64 MB
R


EV56

21164A
1996
366–666[1]
0.35
9.66[1]
209

31–55[1]
3.3/2.5[1]
8
8
96 KB
Up to 64 MB
R,B


PCA56

21164PC
1997
400–533
0.35
3.5
141
264
26–35
3.3/2.5
8
16
–
512 KB–4 MB
R,B,M


PCA57

21164PC
 
600–666
0.28
5.7
101
283
18–23
2.5/2.0
16
32[1]

–
512 KB–4 MB
R,B,M


EV6

21264
1998
450–600
0.35
15.2
314
389
73
2.0
64
64
–
2–8 MB
R,B,M,F


EV67

21264A
1999
600–750
0.25
15.2
210
389
 
2.0
64
64
–
2–8 MB
R,B,M,F,C


EV68AL

21264B
2001
800–833
0.18
15.2
125
 
 
1.7
64
64
–
2–8 MB
R,B,M,F,C,T


EV68CB

21264C
2001
1000–1250
0.18
15.2
125
 
65–75
1.65
64
64
–
2–8 MB
R,B,M,F,C,T


EV68CX

21264D
 
 
 
 
 
 
 
1.65
64
64
–
2–8 MB
R,B,M,F,C,T


EV7

21364
2003
1000–1150
0.18
130
397

125
1.5
64
64
1.75 MB
–
R,B,M,F,C,T


EV7z

21364
2004
1300
0.18
130
397

125
1.5
64
64
1.75 MB
–
R,B,M,F,C,T


Cancelled


EV78/EV79

21364A
Slated for 2004
1700
0.13
152
300

120
1.2
64
64
1.75 MB
–
R,B,M,F,C,T


EV8

21464
Slated for 2003
1200–2000
0.125
250
420
1800
??
1.2
64
64
3 MB
–
R,B,M,F,C,T

ISA extensions

R – Hardware support for rounding to infinity and negative infinity.[38]
B – BWX, the "Byte/Word Extension", adding instructions to allow 8- and 16-bit operations from memory and I/O
M – MVI, "multimedia" instructions
F – FIX, instructions to move data between integer and floating-point registers and for square root
C – CIX, instructions for counting and finding bits
T – support for prefetch with modify intent to improve the performance of the first attempt to acquire a lock
Performance[edit]
To illustrate the comparative performance of Alpha-based systems, some Standard Performance Evaluation Corporation (SPEC) performance numbers (SPECint95, SPECfp95) are listed below. Note that the SPEC results claim to report the measured performance of a whole computer system (CPU, bus, memory, compiler optimizer), not just the CPU. Also note that the benchmark and scale changed from 1992 to 1995. However, the figures give a rough impression of the performance of the Alpha architecture (64-bit), compared with the contemporary HP (64-bit) and Intel-based offerings (32-bit). Perhaps the most obvious trend is that while Intel could always get reasonably close to Alpha in integer performance, in floating-point performance the difference was considerable. On the other side, HP (PA-RISC) is also reasonably close to Alpha, but these CPUs are running at significantly lower clock rates (MHz). The tables lack two important values: the power consumption and the price of a CPU.







System

CPU

MHz

integer

floating point

SPEC benchmark 1995 performance comparison (using SPECint95 and SPECfp95 results [1])


AlphaServer 8400 5/350

21164 (EV5)
350
10.1
14.2


Intel Alder System (200 MHz, 256 KB L2)

Pentium Pro
200
8.9
6.75


HP 9000 C160

PA-8000
160
10.4
16.3






System

CPU

MHz

integer

floating point

2000 performance comparison (using SPECint95 and SPECfp95 results)


AlphaServer ES40 6/833

21264 (EV6)
833
50.0
100.0


Intel VC820 motherboard

Pentium III
1000
46.8
31.9


HP 9000 C3600

PA-8600
552
42.1
64.0





Alpha-based systems[edit]
The first generation of DEC Alpha-based systems comprise the DEC 3000 AXP series workstations and low-end servers, DEC 4000 AXP series mid-range servers, and DEC 7000 AXP and 10000 AXP series high-end servers. The DEC 3000 AXP systems use the same TURBOchannel bus as the prior MIPS-based DECstation models, whereas the 4000 is based on Futurebus+ and the 7000/10000 share an architecture with corresponding VAX models.
DEC also produced a personal computer (PC) configuration Alpha workstation with an Extended Industry Standard Architecture (EISA) bus, the DECpc AXP 150 (codename Jensen, also named the DEC 2000 AXP). This is the first Alpha system to support Windows NT. DEC later produced Alpha versions of their Celebris XL and Digital Personal Workstation PC lines, with 21164 processors.
Digital also produced single-board computers based on the VMEbus for embedded and industrial use. The first generation includes the 21068-based AXPvme 64 and AXPvme 64LC, and the 21066-based AXPvme 160. These were introduced on March 1, 1994. Later models such as the AXPvme 100, AXPvme 166 and AXPvme 230 are based on the 21066A processor, while the Alpha VME 4/224 and Alpha VME 4/288 are based on the 21064A processor. The last models, the Alpha VME 5/352 and Alpha VME 5/480, are based on the 21164 processor.
The 21066 chip is used in the DEC Multia VX40/41/42 compact workstation and the ALPHAbook 1 laptop from Tadpole Technology.
In 1994, DEC launched a new range of AlphaStation and AlphaServer systems. These use 21064 or 21164 processors and introduced the PCI bus, VGA-compatible frame buffers and PS/2-style keyboards and mice. The AlphaServer 8000 series supersedes the DEC 7000/10000 AXP and also employs XMI and FutureBus+ buses.
The AlphaStation XP1000 is the first workstation based on the 21264 processor. Later AlphaServer/Station models based on the 21264 are categorised into DS (departmental server), ES (enterprise server) or GS (global server) families.
The final 21364 chip is used in the AlphaServer ES47, ES80 and GS1280 models and the AlphaStation ES47.
A number of OEM motherboards were produced by DEC, such as the 21066 and 21068-based AXPpci 33 "NoName", which was part of a major push into the OEM market by the company,[39] the 21164-based AlphaPC 164 and AlphaPC 164LX, the 21164PC-based AlphaPC 164SX and AlphaPC 164RX and the 21264-based AlphaPC 264DP. Several third parties such as Samsung and API also produced OEM motherboards such as the API UP1000 and UP2000.
To assist third parties in developing hardware and software for the platform, DEC produced Evaluation Boards, such as the EB64+ and EB164 for the Alpha 21064A and 21164 microprocessors respectively.
The 21164 and 21264 processors were used by NetApp in various network-attached storage systems, while the 21064 and 21164 processors were used by Cray in their T3D and T3E massively parallel supercomputers.

Supercomputers[edit]
The fastest supercomputer based on Alpha processors was the ASCI Q at Los Alamos National Laboratory. The machine was built as an HP AlphaServer SC45/GS Cluster. It had 4096 Alpha (21264 EV-68, 1.25 GHz) CPUs, and reached an Rmax of 7.727 TFLOPS.[40]

Notes[edit]


^ In the context of data transfer, 1 GB is used to mean 1 billion bytes

^ In the context of cache memory, 1 KB = 1024 bytes; 1 MB = 1024 KB


References[edit]


^ a b c d e f Paul V. Bolotoff (21 April 2007). "Alpha: The History in Facts and Comments". Archived from the original on 3 December 2013. Retrieved Nov 22, 2008.

^ Aaron Sakovich (2001). "Windows 2000?". The AlphaNT Source. Archived from the original on 2008-07-08. Retrieved 2007-01-01.

^ "SUSE Linux 7.0 Alpha Edition". SUSE. 2000. Archived from the original on 2014-01-08. Retrieved 2014-01-08.

^ George A. Darcy III; Ronald F. Brender; Stephen J. Morris; Michael V. Iles (1992). "Using Simulation to Develop and Port Software" (PDF). Digital Technical Journal. 4 (4): 181–192.

^ "Ghost of DEC Alpha is why Windows is rubbish at file compression". TheRegister.co.uk. November 2, 2016. Archived from the original on September 20, 2018. Retrieved September 20, 2018.

^ a b Popovich, Ken (2001-06-28). "Alpha proved costly for Compaq". ZDNet. Archived from the original on 2016-03-03. Retrieved 2016-03-02.

^ "Transforming your AlphaServer environment". HP. Archived from the original on 2007-02-08. Retrieved 2007-01-11.

^ Catherine Richardson; Terry Morris; Rockie Morgan; Reid Brown; Donna Meikle (March 1987). "MICA Software Business Plan" (PDF). bitsavers.org. Archived (PDF) from the original on 2021-01-07. Retrieved 2021-01-04.

^ a b Supnik, Bob (24 February 2008). "MicroPrism". The Computer History Simulation Project. Archived from the original on 3 April 2021. Retrieved 26 April 2021.

^ Bolotoff, Paul V (2007-04-22). "Alpha: The History in Facts and Comments". Archived from the original on 2019-09-29. Retrieved 2019-09-09.

^ Mark Smotherman. "Sketch of DEC PRISM". Archived from the original on 2020-04-04. Retrieved 2018-09-20. PRISM (Parallel Reduced Instruction Set Machine) ... first draft of PRISM architecture in August 1985; DEC cancels the project in 1988 in favor of a MIPS-based ...

^ a b c Comerford, Richard (July 1992). "How DEC developed Alpha". IEEE Spectrum. 29 (7): 28. doi:10.1109/6.144508. Archived from the original on 2018-06-20. Retrieved 2021-10-23.

^ Supnik, Bob (1992). "Foreword". Digital Technical Journal. 4 (4). Archived from the original on 2021-05-03. Retrieved 2021-05-03.

^ Supnik, Robert (2017-05-02). "Robert Supnik Oral History" (PDF). computerhistory.org (Interview). Interviewed by Gardner Hendrie. Computer History Museum. Retrieved 2024-04-06.

^ "Managing Technological Leaps: A study of DEC's Alpha Design Team" (PDF). April 1993. Archived (PDF) from the original on 2021-02-07. Retrieved 2021-04-26.

^ Richard L. Sites; Richard T. Witek (2014-05-16). Alpha AXP Architecture Reference Manual – 2nd Edition. Digital Press. ISBN 978-1-4831-8403-6. Archived from the original on 2018-09-20. Retrieved 2018-09-20.

^ Warner, W. (December 22, 2004). "Great moments in microprocessor history". IBM. Archived from the original on January 19, 2018. Retrieved January 18, 2018.

^ a b "cpu-collection.de – DEC Alpha AXP". Archived from the original on 2018-09-20. Retrieved 2018-09-20. The first processors of the Alpha family were designated the DECchip 21064 series (the "21" signifying 21st century)

^ Bill Hamburgen; Jeff Mogul; Brian Reid; Alan Eustace; Richard Swan; Mary Jo Doherty; Joel Bartlett (1989). "WRL Technical Note TN-13: Characterization of Organic Illumination Systems". Digital Equipment Corporation. Archived from the original (PDF) on 2008-05-12. Retrieved 2007-10-04. {{cite journal}}: Cite journal requires |journal= (help)

^ Bradley, Gale; DeTar, Jim (May 19, 1997). "DEC, Cyrix sue Intel". Electronic News. Vol. 43, no. 2168. pp. 1, 60. ISSN 1061-6624.

^ Baum, Allan (July 18, 2018). "Oral History of Allen Baum" (PDF) (Interview). Interviewed by David Brock. p. 60. Archived (PDF) from the original on 2021-02-07.

^ Charles P. Thacker; David G. Conroy; Lawrence C. Stewart (1992). "The Alpha Demonstration Unit: A High-performance Multiprocessor for Software and Chip Development" (PDF). Digital Technical Journal. 4 (4): 51. Retrieved 2024-04-06.

^ John H. Edmondson; Paul I. Rubinfeld; Peter J. Bannon; Bradley J. Benschneider; Debra Bernstein; Ruben W. Castelino; Elizabeth M. Cooper; Daniel E. Dever; Dale R. Donchin; Timothy C. Fischer; Anil K. Jain; Shekhar Mehta; Jeanne E. Meyer; Ronald P. Preston; Vidya Rajagopalan; Chandrasekhara Somanathan; Scott A. Taylor; Gilbert M. Wolrich (1995). "Internal Organization of the Alpha 21164, a 300-MHz 64-bit Quad-issue CMOS RISC Microprocessor". Digital Technical Journal. 7 (1): 119–135. CiteSeerX 10.1.1.38.9551. large, on-chip, second-level, write-back cache

^ Reviews, C.T.I (2016). Structured Computer Organization. ISBN 978-1478426738. 21364 ... first high performance processor to have an onchip memory controller.

^ Roger Espasa; Federico Ardanaz; Julio Gago; Roger Gramunt; Isaac Hernandez; Toni Juan; Joel Emer; Stephen Felix; Geoff Lowney; Matthew Mattina; Andre Seznec (2002). "Tarantula: A Vector Extension to the Alpha Architecture". In Danielle C. Martin (ed.). Proceedings: 29th Annual International Symposium on Computer Architecture (ISCA '02). 29th Annual International Symposium on Computer Architecture (ISCA '02). Joe Daigle/Studio Productions. Los Alamitos, Calif: IEEE Computer Society. pp. 281–292. doi:10.1109/ISCA.2002.1003586. ISBN 0-7695-1605-X. Archived from the original on 2007-10-04. Retrieved 2007-10-04.

^ "The VAX Vacuum". ... legally, if DEC had used VAX in the U.S. before that ..... "reasonable person" has no difficulty distinguishing between the two uses

^ Chad Page (30 April 1996). "The meaning of AXP (was Re: ALPHA ambiguity)". Linux kernel mailing list (Mailing list). Retrieved 2024-08-29.

^ "The Alpha AXP, part 8: Memory access, storing bytes and words and unaligned data". August 16, 2017. Retrieved July 18, 2022. Dealing with unaligned memory on the Alpha AXP is very annoying

^ "Alpha 21264 Microprocessor Data Sheet" (PDF). Archived (PDF) from the original on 2017-08-30. Retrieved 2018-09-20. The instructions that comprise the BWX extension are ...

^ "MIPS Instructions". DEC Alpha ... , no integer condition code.[permanent dead link]

^ "Alpha Bits – Migrating To The Future". DEC Professional. August 1992. p. 62. H floating datatypes are unavailable on Alpha

^ "Migrating an Application from OpenVMS VAX to OpenVMS Alpha". 2.5.2 Data Types.

^ Gronowski, P. E.; Bowhill, W. J.; Donchin, D. R.; Blake-Campos, R. P.; Carlson, D. A.; Equi, E. R.; Loughlin, B. J.; Mehta, S.; Mueller, R. O.; Olesin, A.; Noorlag, D. J. W.; Preston, R. P. (1996). "A 433-MHz 64-b quad-issue RISC microprocessor". IEEE Journal of Solid-State Circuits. 31 (11): 1687–1696. Bibcode:1996IJSSC..31.1687G. doi:10.1109/JSSC.1996.542313. S2CID 39280205.

^ Gwennap, Linley (18 November 1996). "Digital, MIPS Add Multimedia Extensions". Microprocessor Report.

^ Luiz André Barroso; Kourosh Gharachorloo; Robert McNamara; Andreas Nowatzyk; Shaz Qadeer; Barton Sano; Scott Smith; Robert Stets; Ben Verghese (2000). Piranha: A Scalable Architecture Based on Single-Chip Multiprocessing. 27th Annual International Symposium on Computer Architecture. doi:10.1145/339647.339696.

^ Hung-Sheng Tsao (2011-10-29). "SW1600 and Alpha 21164". LaoTsao's Weblog. Retrieved 2011-10-29.

^ Dongarra, Jack (2016-06-20). "Report on the Sunway TaihuLight System" (PDF). www.netlib.org. Retrieved 2016-06-20.

^ David Mosberger. "Overview of Alpha Family". Archived from the original on January 20, 2009. Retrieved Dec 9, 2009.

^ Reinhardt Krause. "DEC launching Alpha board push". Electronic News, April 4, 1994.

^ Los Alamos National Laboratories (2002). "The ASCI Q System: 30 TeraOPS Capability at Los Alamos National Laboratory" (PDF). Archived from the original (PDF) on 2011-01-12. Retrieved 2010-06-06.


External links[edit]
The Alpha Architecture Handbook, Version 4
The Alpha Architecture Handbook, Version 3
Digital Technical Journal, Volume 4, Number 4, Special Issue 1992 Alpha AXP Architecture and Systems Archived 2023-01-23 at the Wayback Machine This issue contains several articles from Alpha's Architects
Archived technical documentation library This link features the hardware reference manuals and datasheets for Alpha microprocessors, chipsets and OEM motherboards. Includes the Alpha Architecture Handbook and various programming manuals.
A Conversation with Dan Dobberpuhl (October 1, 2003)
Dr. Bruce Hutton's lecture notes on Computer Architecture
vteDigital Equipment CorporationKey people
Ken Olsen (founder and CEO, 1957–1992)
Harlan Anderson (co-founder)
Gordon Bell (VP of engineering)
Robert Palmer (CEO, 1992–1998)
Instruction setarchitectures,processorsPDP-11
LSI-11
F-11
T-11
J-11
VAX
V-11
MicroVAX 78032
CVAX
SOC
Rigel
Mariah
NVAX
Alpha
Alpha 21064
21066
21068
Alpha 21164 (21164PC)
Alpha 21264
Alpha 21364
Alpha 21464
Other
MicroPRISM
StrongARM
Computerterminals
VT05 (1970)
GT40 (1972)
VT50/VT52 (1975)
VT55
VT62
VT100 (1978)
VT101
VT102
VT103
VT105
VT131
VT180
VT220 (1983)
VT240
VT241
VT320 (1987)
VT330
VT340
VT420 (1990)
VT1000 (1990)
VT510 (1993)
VT520 (1994)
VT525
Operatingsystems
DECsys
4K DMS
COS
TOPS-10
RSX-15
TSS/8
OS/8
DOS-11
RT-11
RSTS/E
RSX-11
IAS
DSM-11
TOPS-20
VAX/VMS
VAXELN
Ultrix
MICA
Digital UNIX
Programminglanguages
BASIC-8
DIBOL
FOCAL
MACRO-10
MACRO-11
MUMPS
VAX MACRO
DIGITAL Command Language
Character sets
Code page 1100 (Multinational)
Code page 1287 (Greek)
Code page 1288 (Turkish)
Hebrew
National Replacement
RADIX 50
Special Graphics
Technical
Bus standards
Digital Storage Systems Interconnect
Massbus
Q-Bus
Standard Disk Interconnect
Synchronous Backplane Interconnect
TURBOchannel
Unibus
VAXBI bus
Other hardware
DECserver
DECtalk
DECtape
DECwriter
Digital Linear Tape
Dynamically Redefined Character Set
Firefly
Flip-Chip module
Gold key
LK201
LK421
Mass Storage Control Protocol
PALcode
RA90
RK05
RL02
Star coupler
System Module
TU81
Related topics
AdvFS
AltaVista
Compaq
CPU Wars
DECnet
DECUS
HP-Interex
Digital Federal Credit Union
Dynamic debugging technique
FX!32
Local Area Transport
Maintenance Operations Protocol
On-line Debugging Tool
PALcode
Record Management Services
ReGIS
Sequence and Batch Language
Sixel
System Reference Manual
Systems Research Center
TD/SMP
The Ultimate Entrepreneur
VT640
WPS-8

 Computers template
 Category
 Commons

vteDigital Equipment Corporation computersPDP
18-bit
PDP-1
PDP-4
PDP-7
PDP-9
PDP-15
12-bit
LINC
LINC-8
PDP-5
PDP-8
PDP-8/e
PDP-12
DECmate
PDP-14


36-bit
PDP-6
PDP-10
DECSYSTEM-20
16-bit
PDP-11
DEC Professional

VAX
VAX-11
MicroVAX
VAX 8000
VAXstation
Firefly
VAXserver
VAX 6000
VAX 4000
VAX 9000
VAXft
VAX 7000 and VAX 10000
x86
Rainbow 100
VAXmate
DECpc
DECstation
Multia
Digital Personal Workstation
HiNote
MIPS
DECstation
DECsystem servers
Alpha
DEC 3000 AXP
DEC 4000 AXP
DEC 7000 AXP and DEC 10000 AXP
DECpc AXP 150
DEC 2000 AXP
Multia
AlphaServer
AlphaStation
Digital Personal Workstation
See also
Compaq Professional Workstation 1000 XP
Itsy Pocket Computer
Jupiter project
List of VAX computers

 Company template
 Category
 Commons

vteCompaq
Acquired by Hewlett-Packard in 2002; existing product lines and intellectual property split between HP Inc. and Hewlett Packard Enterprise in 2015
CorporateaspectsFounders
Rod Canion
Jim Harris
Bill Murto
Directors
Michael Capellas
Eckhard Pfeiffer
Ben Rosen
Acquisitions
Thomas-Conrad (1995)
NetWorth (1995)
Microcom (1997)
Tandem Computers (1997)
Digital Equipment Corporation (1998)
Zip2 (1999)
HardwareServers
SystemPro XL
ProLiant*
NonStop*
AlphaServer*
Workstations
SystemPro
ProSignia
Professional Workstation
AlphaStation*
DesktopsBusiness
Deskpro
386
ProLinea
Evo*
HP Compaq**
Elite**
Pro**
Consumer
Presario*
Portablesand laptopsBusiness
Portable
1st generation
Plus
286
II
III
386
486
SLT
LTE
1st generation
Lite
Elite
5000 series
ProSignia
Armada
Evo*
HP Compaq**
Consumer
Contura
Presario*
1200
R3000**
Internet appliances
MSN Companion
iPAQ desktop
Handheldsand subnotebooks
Concerto
Contura Aero
Aero
C series
tc1000
iPAQ handheld*
tc1100**
Architectures
DEC Alpha*
Software
AltaVista
OpenVMS
TACL
Tru64 UNIX

Asterisk (*) denotes product lines continued after acquisition by HP
Double asterisk (**) denotes product lines established after acquisition by HP

 DEC hardware
 video terminals
 DEC operating systems
 HP
vteReduced instruction set computer (RISC) architecturesOrigins
IBM 801
Berkeley RISC
Stanford MIPS
In active development
Analog Devices Blackfin
ARC
ARM
AVR
eSi-RISC
LatticeMico8, LatticeMico32
MIPS
OpenRISC
Power ISA
Renesas M32R, SuperH, V850
RISC-V
SPARC
Sunway
Unicore
Xilinx MicroBlaze, PicoBlaze
Development discontinued
Alpha
AMD Am29000
Apollo PRISM
Atmel AVR32
Clipper
CR16
CRISP
DEC PRISM
Intel i860, i960
META
MIPS-X
Motorola 88000, M·CORE
PA-RISC
POWER, PowerPC (active use in space exploration as RAD750), ROMP

vteProcessor technologiesModels
Abstract machine
Stored-program computer
Finite-state machine
with datapath
Hierarchical
Deterministic finite automaton
Queue automaton
Cellular automaton
Quantum cellular automaton
Turing machine
Alternating Turing machine
Universal
Post–Turing
Quantum
Nondeterministic Turing machine
Probabilistic Turing machine
Hypercomputation
Zeno machine
Belt machine
Stack machine
Register machines
Counter
Pointer
Random-access
Random-access stored program
Architecture
Microarchitecture
Von Neumann
Harvard
modified
Dataflow
Transport-triggered
Cellular
Endianness
Memory access
NUMA
HUMA
Load–store
Register/memory
Cache hierarchy
Memory hierarchy
Virtual memory
Secondary storage
Heterogeneous
Fabric
Multiprocessing
Cognitive
Neuromorphic
Instruction setarchitecturesTypes
Orthogonal instruction set
CISC
RISC
Application-specific
EDGE
TRIPS
VLIW
EPIC
MISC
OISC
NISC
ZISC
VISC architecture
Quantum computing
Comparison
Addressing modes
Instructionsets
Motorola 68000 series
VAX
PDP-11
x86
ARM
Stanford MIPS
MIPS
MIPS-X
Power
POWER
PowerPC
Power ISA
Clipper architecture
SPARC
SuperH
DEC Alpha
ETRAX CRIS
M32R
Unicore
Itanium
OpenRISC
RISC-V
MicroBlaze
LMC
System/3x0
S/360
S/370
S/390
z/Architecture
Tilera ISA
VISC architecture
Epiphany architecture
Others
ExecutionInstruction pipelining
Pipeline stall
Operand forwarding
Classic RISC pipeline
Hazards
Data dependency
Structural
Control
False sharing
Out-of-order
Scoreboarding
Tomasulo's algorithm
Reservation station
Re-order buffer
Register renaming
Wide-issue
Speculative
Branch prediction
Memory dependence prediction
ParallelismLevel
Bit
Bit-serial
Word
Instruction
Pipelining
Scalar
Superscalar
Task
Thread
Process
Data
Vector
Memory
Distributed
Multithreading
Temporal
Simultaneous
Hyperthreading
Simultaneous and heterogenous
Speculative
Preemptive
Cooperative
Flynn's taxonomy
SISD
SIMD
Array processing (SIMT)
Pipelined processing
Associative processing
SWAR
MISD
MIMD
SPMD
Processorperformance
Transistor count
Instructions per cycle (IPC)
Cycles per instruction (CPI)
Instructions per second (IPS)
Floating-point operations per second (FLOPS)
Transactions per second (TPS)
Synaptic updates per second (SUPS)
Performance per watt (PPW)
Cache performance metrics
Computer performance by orders of magnitude
Types
Central processing unit (CPU)
Graphics processing unit (GPU)
GPGPU
Vector
Barrel
Stream
Tile processor
Coprocessor
PAL
ASIC
FPGA
FPOA
CPLD
Multi-chip module (MCM)
System in a package (SiP)
Package on a package (PoP)
By application
Embedded system
Microprocessor
Microcontroller
Mobile
Ultra-low-voltage
ASIP
Soft microprocessor
Systemson chip
System on a chip (SoC)
Multiprocessor (MPSoC)
Cypress PSoC
Network on a chip (NoC)
Hardwareaccelerators
Coprocessor
AI accelerator
Graphics processing unit (GPU)
Image processor
Vision processing unit (VPU)
Physics processing unit (PPU)
Digital signal processor (DSP)
Tensor Processing Unit (TPU)
Secure cryptoprocessor
Network processor
Baseband processor

Word size
1-bit
4-bit
8-bit
12-bit
15-bit
16-bit
24-bit
32-bit
48-bit
64-bit
128-bit
256-bit
512-bit
bit slicing
others
variable
Core count
Single-core
Multi-core
Manycore
Heterogeneous architecture
Components
Core
Cache
CPU cache
Scratchpad memory
Data cache
Instruction cache
replacement policies
coherence
Bus
Clock rate
Clock signal
FIFO
Functionalunits
Arithmetic logic unit (ALU)
Address generation unit (AGU)
Floating-point unit (FPU)
Memory management unit (MMU)
Load–store unit
Translation lookaside buffer (TLB)
Branch predictor
Branch target predictor
Integrated memory controller (IMC)
Memory management unit
Instruction decoder
Logic
Combinational
Sequential
Glue
Logic gate
Quantum
Array
Registers
Processor register
Status register
Stack register
Register file
Memory buffer
Memory address register
Program counter
Control unit
Hardwired control unit
Instruction unit
Data buffer
Write buffer
Microcode ROM
Counter
Datapath
Multiplexer
Demultiplexer
Adder
Multiplier
CPU
Binary decoder
Address decoder
Sum-addressed decoder
Barrel shifter
Circuitry
Integrated circuit
3D
Mixed-signal
Power management
Boolean
Digital
Analog
Quantum
Switch

Powermanagement
PMU
APM
ACPI
Dynamic frequency scaling
Dynamic voltage scaling
Clock gating
Performance per watt (PPW)
Related
History of general-purpose CPUs
Microprocessor chronology
Processor design
Digital electronics
Hardware security module
Semiconductor device fabrication
Tick–tock model
Pin grid array
Chip carrier

Authority control databases: National GermanyUnited StatesIsrael




Retrieved from "https://en.wikipedia.org/w/index.php?title=DEC_Alpha&oldid=1281471867"
Categories: Alpha architectureDigital Equipment CorporationHidden categories: CS1 errors: missing periodicalAll articles with dead external linksArticles with dead external links from February 2022Articles with permanently dead external linksArticles with short descriptionShort description is different from WikidataWikipedia articles needing clarification from January 2023Webarchive template wayback links






 This page was last edited on 20 March 2025, at 16:01 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view














Search













Search









Toggle the table of contents







DEC Alpha




























23 languages


Add topic
















